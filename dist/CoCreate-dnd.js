(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["dnd"] = factory();
	else
		root["CoCreate"] = root["CoCreate"] || {}, root["CoCreate"]["dnd"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "../CoCreate-components/CoCreate-dnd/src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../CoCreate-components/CoCreate-dnd/src/collaboration.js":
/*!****************************************************************!*\
  !*** ../CoCreate-components/CoCreate-dnd/src/collaboration.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*global dom*/\n\n/*global CoCreate*/\n\n/*global elementConfig*/\n\n/*global DOMParser*/\n\n/*global domEditor*/\n\n/*global CoCreate.socket*/\nfunction wrapper() {\n  if (window.parent !== window) return;\n  window.addEventListener(\"load\", () => {\n    CoCreate.socket.listen('domEditor', function (data) {\n      console.log('raw object recieved: ', data.target, data.value[1], window.location.pathname); // resolving the element_id to real element in the clinet\n\n      if (data.target) {\n        data.target = document.querySelector(`[data-element_id=\"${data.target}\"]`);\n      }\n\n      if (data.value[1]) {\n        data.value[1] = document.querySelector(`[data-element_id=\"${data.value[1]}\"]`);\n      }\n\n      if (!data.target) return console.log('dnd error: draggble is null');\n      if (!data.value[1]) return console.log('dnd error: droppable is null'); // passing it to domEditor\n\n      let [position, el] = data.value;\n      data.target.insertAdjacentElement(position, el);\n    });\n    CoCreate.socket.listen(\"dndNewElement\", function (data) {\n      console.log(\"raw object recieved: \", data.target, data.value[1], window.location.pathname);\n\n      try {\n        if (data.path.length) {\n          let iframe = document.querySelector(data.path[0]);\n          let context = iframe.contentWindow.document || iframe.contentDocument;\n          data.target = context.querySelector(`[data-element_id=${data.target}]`);\n        } else {\n          data.target = document.querySelector(`[data-element_id=${data.target}]`);\n        }\n\n        data.value[1] = CoCreate.utils.parseTextToHtml(data.value[1]);\n\n        if (data.hiddenAttribute) {\n          for (let [key, value] of Object.entries(data.hiddenAttribute)) {\n            data.value[1].setHiddenAttribute(key, value);\n          }\n        } // console.log(\"with object: \", data, window.location.pathname);\n        // passing it to domEditor\n\n\n        let [position, el] = data.value;\n        data.target.insertAdjacentElement(position, el); // domEditor(data);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n  });\n  window.addEventListener(\"dndsuccess\", e => {\n    let {\n      dropedEl,\n      dragedEl,\n      position,\n      dropType,\n      path\n    } = e.detail;\n    let CoCreate = dragedEl.ownerDocument !== dropedEl.ownerDocument ? window.iframes.guests.canvas.window.CoCreate : window.CoCreate;\n    if (!dropedEl.getAttribute(\"data-element_id\")) dropedEl.setAttribute(\"data-element_id\", CoCreate.utils.UUID());\n    dropedEl = dropedEl.getAttribute(\"data-element_id\");\n\n    if (dropType === \"data-cloneable\") {\n      let hiddenAttribute = dragedEl.getAllHiddenAttribute();\n      dragedEl = dragedEl.outerHTML;\n      CoCreate.message.send({\n        broadcast_sender: false,\n        rooms: \"\",\n        emit: {\n          message: \"dndNewElement\",\n          data: {\n            target: dropedEl,\n            method: \"insertAdjacentElement\",\n            value: [position, dragedEl],\n            path,\n            hiddenAttribute\n          }\n        }\n      });\n    } else {\n      if (!dragedEl.getAttribute(\"data-element_id\")) dragedEl.setAttribute(\"data-element_id\", CoCreate.utils.UUID());\n      dragedEl = dragedEl.getAttribute(\"data-element_id\");\n      CoCreate.message.send({\n        broadcast_sender: true,\n        rooms: \"\",\n        emit: {\n          message: \"domEditor\",\n          data: {\n            target: dropedEl,\n            method: \"insertAdjacentElement\",\n            value: [position, dragedEl]\n          }\n        }\n      });\n    }\n  });\n}\n\nwrapper();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../CoCreate-components/CoCreate-dnd/src/collaboration.js\n");

/***/ }),

/***/ "../CoCreate-components/CoCreate-dnd/src/dnd-config.js":
/*!*************************************************************!*\
  !*** ../CoCreate-components/CoCreate-dnd/src/dnd-config.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = dndConfigs;\n\nvar _index = __webpack_require__(/*! ./index.js */ \"../CoCreate-components/CoCreate-dnd/src/index.js\");\n\n/*global initContainer*/\nfunction dndConfigs() {\n  window.CoCreate.observer.init({\n    name: \"dnd-config\",\n    observe: [\"childList\"],\n    callback: mutation => {\n      let sortables = document.querySelectorAll(\".sortable\");\n      sortables.forEach(sortable => {\n        (0, _index.initContainer)({\n          target: sortable\n        });\n      });\n      let cloneables = document.querySelectorAll(\".cloneable\");\n      cloneables.forEach(cloneable => {\n        (0, _index.initContainer)({\n          target: cloneable,\n          cloneable: true\n        });\n      });\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5kbmQvLi4vQ29DcmVhdGUtY29tcG9uZW50cy9Db0NyZWF0ZS1kbmQvc3JjL2RuZC1jb25maWcuanM/ZmRiMyJdLCJuYW1lcyI6WyJkbmRDb25maWdzIiwid2luZG93IiwiQ29DcmVhdGUiLCJvYnNlcnZlciIsImluaXQiLCJuYW1lIiwib2JzZXJ2ZSIsImNhbGxiYWNrIiwibXV0YXRpb24iLCJzb3J0YWJsZXMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwic29ydGFibGUiLCJ0YXJnZXQiLCJjbG9uZWFibGVzIiwiY2xvbmVhYmxlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBREE7QUFFZSxTQUFTQSxVQUFULEdBQXNCO0FBSW5DQyxRQUFNLENBQUNDLFFBQVAsQ0FBZ0JDLFFBQWhCLENBQXlCQyxJQUF6QixDQUE4QjtBQUM1QkMsUUFBSSxFQUFFLFlBRHNCO0FBRTVCQyxXQUFPLEVBQUUsQ0FBQyxXQUFELENBRm1CO0FBRzVCQyxZQUFRLEVBQUVDLFFBQVEsSUFBSTtBQUNuQixVQUFJQyxTQUFTLEdBQUdDLFFBQVEsQ0FBQ0MsZ0JBQVQsQ0FBMEIsV0FBMUIsQ0FBaEI7QUFFREYsZUFBUyxDQUFDRyxPQUFWLENBQW1CQyxRQUFELElBQWM7QUFDOUIsa0NBQWM7QUFBRUMsZ0JBQU0sRUFBRUQ7QUFBVixTQUFkO0FBQ0QsT0FGRDtBQUlBLFVBQUlFLFVBQVUsR0FBR0wsUUFBUSxDQUFDQyxnQkFBVCxDQUEwQixZQUExQixDQUFqQjtBQUVBSSxnQkFBVSxDQUFDSCxPQUFYLENBQW9CSSxTQUFELElBQWU7QUFDaEMsa0NBQWM7QUFBRUYsZ0JBQU0sRUFBRUUsU0FBVjtBQUFxQkEsbUJBQVMsRUFBRTtBQUFoQyxTQUFkO0FBQ0QsT0FGRDtBQUdEO0FBZjJCLEdBQTlCO0FBbUJEIiwiZmlsZSI6Ii4uL0NvQ3JlYXRlLWNvbXBvbmVudHMvQ29DcmVhdGUtZG5kL3NyYy9kbmQtY29uZmlnLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypnbG9iYWwgaW5pdENvbnRhaW5lciovXG5pbXBvcnQgeyBpbml0Q29udGFpbmVyIH0gZnJvbSBcIi4vaW5kZXguanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRuZENvbmZpZ3MoKSB7XG5cblxuXG4gIHdpbmRvdy5Db0NyZWF0ZS5vYnNlcnZlci5pbml0KHtcbiAgICBuYW1lOiBcImRuZC1jb25maWdcIixcbiAgICBvYnNlcnZlOiBbXCJjaGlsZExpc3RcIl0sXG4gICAgY2FsbGJhY2s6IG11dGF0aW9uID0+IHtcbiAgICAgICBsZXQgc29ydGFibGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5zb3J0YWJsZVwiKTtcbiAgICBcbiAgICAgIHNvcnRhYmxlcy5mb3JFYWNoKChzb3J0YWJsZSkgPT4ge1xuICAgICAgICBpbml0Q29udGFpbmVyKHsgdGFyZ2V0OiBzb3J0YWJsZSB9KTtcbiAgICAgIH0pO1xuICAgIFxuICAgICAgbGV0IGNsb25lYWJsZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmNsb25lYWJsZVwiKTtcbiAgICBcbiAgICAgIGNsb25lYWJsZXMuZm9yRWFjaCgoY2xvbmVhYmxlKSA9PiB7XG4gICAgICAgIGluaXRDb250YWluZXIoeyB0YXJnZXQ6IGNsb25lYWJsZSwgY2xvbmVhYmxlOiB0cnVlIH0pO1xuICAgICAgfSk7XG4gICAgfSxcbiAgfSk7XG5cblxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../CoCreate-components/CoCreate-dnd/src/dnd-config.js\n");

/***/ }),

/***/ "../CoCreate-components/CoCreate-dnd/src/eventUtil.js":
/*!************************************************************!*\
  !*** ../CoCreate-components/CoCreate-dnd/src/eventUtil.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = eventUtil;\n\n// create a javascript-like event to be used in other classes\nfunction eventUtil() {\n  this.listener = {}; // register event, like addEventListener\n\n  this.on = function (type, callback) {\n    if (!Object.hasOwnProperty(type)) {\n      this.listener[type] = [];\n    }\n\n    this.listener[type].push(callback);\n  }; // dispatch an event\n\n\n  this.dispatch = function (type, data) {\n    if (this.listener.hasOwnProperty(type)) {\n      this.listener[type].forEach(callback => callback(data));\n    }\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5kbmQvLi4vQ29DcmVhdGUtY29tcG9uZW50cy9Db0NyZWF0ZS1kbmQvc3JjL2V2ZW50VXRpbC5qcz9hYmY5Il0sIm5hbWVzIjpbImV2ZW50VXRpbCIsImxpc3RlbmVyIiwib24iLCJ0eXBlIiwiY2FsbGJhY2siLCJPYmplY3QiLCJoYXNPd25Qcm9wZXJ0eSIsInB1c2giLCJkaXNwYXRjaCIsImRhdGEiLCJmb3JFYWNoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFHZSxTQUFTQSxTQUFULEdBQXFCO0FBQ2xDLE9BQUtDLFFBQUwsR0FBZ0IsRUFBaEIsQ0FEa0MsQ0FHbEM7O0FBQ0EsT0FBS0MsRUFBTCxHQUFVLFVBQVNDLElBQVQsRUFBZUMsUUFBZixFQUF5QjtBQUNqQyxRQUFJLENBQUNDLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkgsSUFBdEIsQ0FBTCxFQUFrQztBQUNoQyxXQUFLRixRQUFMLENBQWNFLElBQWQsSUFBc0IsRUFBdEI7QUFDRDs7QUFDRCxTQUFLRixRQUFMLENBQWNFLElBQWQsRUFBb0JJLElBQXBCLENBQXlCSCxRQUF6QjtBQUNELEdBTEQsQ0FKa0MsQ0FXbEM7OztBQUNBLE9BQUtJLFFBQUwsR0FBZ0IsVUFBU0wsSUFBVCxFQUFlTSxJQUFmLEVBQXFCO0FBQ25DLFFBQUksS0FBS1IsUUFBTCxDQUFjSyxjQUFkLENBQTZCSCxJQUE3QixDQUFKLEVBQXdDO0FBQ3RDLFdBQUtGLFFBQUwsQ0FBY0UsSUFBZCxFQUFvQk8sT0FBcEIsQ0FBNEJOLFFBQVEsSUFBSUEsUUFBUSxDQUFDSyxJQUFELENBQWhEO0FBQ0Q7QUFDRixHQUpEO0FBTUQiLCJmaWxlIjoiLi4vQ29DcmVhdGUtY29tcG9uZW50cy9Db0NyZWF0ZS1kbmQvc3JjL2V2ZW50VXRpbC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGNyZWF0ZSBhIGphdmFzY3JpcHQtbGlrZSBldmVudCB0byBiZSB1c2VkIGluIG90aGVyIGNsYXNzZXNcblxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBldmVudFV0aWwoKSB7XG4gIHRoaXMubGlzdGVuZXIgPSB7fVxuXG4gIC8vIHJlZ2lzdGVyIGV2ZW50LCBsaWtlIGFkZEV2ZW50TGlzdGVuZXJcbiAgdGhpcy5vbiA9IGZ1bmN0aW9uKHR5cGUsIGNhbGxiYWNrKSB7XG4gICAgaWYgKCFPYmplY3QuaGFzT3duUHJvcGVydHkodHlwZSkpIHtcbiAgICAgIHRoaXMubGlzdGVuZXJbdHlwZV0gPSBbXTtcbiAgICB9XG4gICAgdGhpcy5saXN0ZW5lclt0eXBlXS5wdXNoKGNhbGxiYWNrKVxuICB9XG5cbiAgLy8gZGlzcGF0Y2ggYW4gZXZlbnRcbiAgdGhpcy5kaXNwYXRjaCA9IGZ1bmN0aW9uKHR5cGUsIGRhdGEpIHtcbiAgICBpZiAodGhpcy5saXN0ZW5lci5oYXNPd25Qcm9wZXJ0eSh0eXBlKSkge1xuICAgICAgdGhpcy5saXN0ZW5lclt0eXBlXS5mb3JFYWNoKGNhbGxiYWNrID0+IGNhbGxiYWNrKGRhdGEpKVxuICAgIH1cbiAgfVxuXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../CoCreate-components/CoCreate-dnd/src/eventUtil.js\n");

/***/ }),

/***/ "../CoCreate-components/CoCreate-dnd/src/index.js":
/*!********************************************************!*\
  !*** ../CoCreate-components/CoCreate-dnd/src/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.initIframe = exports.initFunction = exports.initElement = exports.initContainer = void 0;\n\n__webpack_require__(/*! ./collaboration.js */ \"../CoCreate-components/CoCreate-dnd/src/collaboration.js\");\n\nvar _dndConfig = _interopRequireDefault(__webpack_require__(/*! ./dnd-config.js */ \"../CoCreate-components/CoCreate-dnd/src/dnd-config.js\"));\n\n__webpack_require__(/*! ./util/iframe */ \"../CoCreate-components/CoCreate-dnd/src/util/iframe.js\");\n\nvar _common = __webpack_require__(/*! ./util/common */ \"../CoCreate-components/CoCreate-dnd/src/util/common.js\");\n\nvar _virtualDnd = _interopRequireDefault(__webpack_require__(/*! ./virtualDnd */ \"../CoCreate-components/CoCreate-dnd/src/virtualDnd.js\"));\n\n__webpack_require__(/*! ./util/onClickLeftEvent */ \"../CoCreate-components/CoCreate-dnd/src/util/onClickLeftEvent.js\");\n\nvar vars = _interopRequireWildcard(__webpack_require__(/*! ./util/variables.js */ \"../CoCreate-components/CoCreate-dnd/src/util/variables.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*global HTMLElement*/\n\n/*global DOMException*/\nlet touchTimeout;\nlet beforeDndSuccessCallback;\n\nfunction beforeDndSuccess() {\n  if (beforeDndSuccessCallback) return beforeDndSuccessCallback.apply(null, arguments);\n  return {};\n}\n\nlet mousemove, mouseup, mousedown, touchstart, touchend, touchmove; // export default function dndf(window, document, options) {\n// }\n\nlet options = {\n  scroller: new _common.autoScroller({\n    speed: 4,\n    threshold: 3\n  }),\n  myDropMarker: new _common.dropMarker()\n}; //// defining events\n\nlet {\n  myDropMarker,\n  scroller\n} = options;\nlet dnd = new _virtualDnd.default(beforeDndSuccess);\nlet ghost;\ndnd.on(\"dragStart\", data => {\n  myDropMarker.hide();\n  ghost = new _common.ghostEffect(data.e, data.el, {\n    window,\n    document\n  });\n  ghost.start();\n});\ndnd.on(\"dragEnd\", data => {\n  myDropMarker.hide();\n  if (ghost) ghost.hide(data.ref);\n});\ndnd.on(\"dragOver\", data => {\n  // it will always run when mouse or touch moves\n  myDropMarker.draw(data.el, data.closestEl, data.orientation, !!data.hasChild, data.ref);\n});\nlet startGroup;\nlet isDraging = false;\nlet consolePrintedEl = null; // dev only\n\nfunction start(e, ref) {\n  let r = (0, _common.getCocs)(e.target, [vars.draggable, vars.cloneable, vars.handleable]);\n  if (!Array.isArray(r)) return;\n  let [el, att] = r;\n\n  switch (att) {\n    case vars.cloneable:\n      let html = el.getAttribute(vars.data_insert_html);\n\n      if (html) {\n        el = (0, _common.parse)(html);\n        if (!el) return;\n      } else el = el.cloneNode(true);\n\n      break;\n\n    case vars.draggable:\n      let hasHandle = el.getAnyAttribute(vars.handleable);\n      if (hasHandle) return;\n      break;\n\n    default:\n      el = (0, _common.getCoc)(el, vars.draggable);\n  } // get group\n\n\n  let groupResult = (0, _common.getGroupName)(el);\n  startGroup = groupResult[1];\n  ref.document.body.style.cursor = \"crosshair !important\";\n  isDraging = true;\n  dnd.dragStart(e, el, null, ref, att);\n}\n\nfunction end(e, ref) {\n  ref.document.body.style.cursor = \"\";\n  isDraging = false;\n  dnd.dragEnd(e);\n  myDropMarker.hide();\n  scroller.deactivateScroll();\n}\n\nfunction move({\n  x,\n  y,\n  target,\n  isTouch\n}, ref, stopScroll) {\n  if (!isDraging) return;\n  if (ghost) ghost.draw({\n    x,\n    y\n  }, ref);\n  scroller.update(x, y);\n\n  if (isDraging) {\n    // skip group names\n    let [groupEl, groupname] = (0, _common.getGroupName)(target);\n\n    if (startGroup && groupname) {\n      if (startGroup !== groupname) {\n        do {\n          let groupResult = (0, _common.getGroupName)(groupEl);\n          if (!groupResult[0]) return; // or return\n\n          groupEl = groupResult[0].parentElement;\n          groupname = groupResult[1];\n\n          if (startGroup === groupname) {\n            target = groupResult[0];\n            break;\n          }\n        } while (true);\n      }\n    } else if (startGroup !== groupname) return;\n  } else {\n    if (ghost) ghost.hide();\n  }\n\n  if (!target) return; // it's out of iframe if this is multi frame\n\n  let el = (0, _common.getCoc)(target, vars.droppable); // let onEl = target; // dev\n  // if (consolePrintedEl != target) { // dev\n  //   // dev\n  //   console.log(\"you are on: \\n\", onEl, \"\\nDroping in: \\n\", el);\n  //   consolePrintedEl = el;\n  // }\n  // if()\n\n  if (!el) return;\n\n  if (!stopScroll) {\n    scroller.calculateScroll({\n      x,\n      y,\n      element: el.parentElement,\n      onMouseScrollMove: e => move(e, ref, true)\n    });\n  } // todo:\n\n\n  dnd.dragOver({\n    x,\n    y,\n    target: el\n  }, el, ref);\n}\n\nmousedown = (e, ref) => {\n  // console.log(\"mouse down\", e);\n  if (e.which != 1) return;\n  start(e, ref);\n};\n\nmouseup = (e, ref) => {\n  // console.log(\"mouse up\", e);\n  // todo: why would we check for hoverable and what do we do whith this?\n  // let el = getCoc(e.target, hoverable)\n  // if (!el) return;\n  //\n  if (e.which != 1) return;\n  end(e, ref);\n};\n\nmousemove = (e, ref) => {\n  move(e, ref);\n}; // let CoCreateClickLeft = (e) => {\n//   // todo: not working!?\n//   let el = getCoc(e.target, selectable);\n//   if (!el) return;\n// };\n\n\nlet refs = new Map();\n\nconst initIframe = ({\n  isIframe,\n  frame,\n  document,\n  window\n}) => {\n  let ref;\n\n  if (isIframe) {\n    let frameWindow = frame.contentWindow;\n    let frameDocument = frameWindow.document || frame.contentDocument;\n    let rect = frame.getBoundingClientRect();\n    ref = {\n      x: rect.left,\n      y: rect.top,\n      frame,\n      window: frameWindow,\n      document: frameDocument,\n      isIframe: true\n    };\n  } else {\n    ref = {\n      x: 0,\n      y: 0,\n      window,\n      document,\n      isIframe: false\n    };\n  }\n\n  if (ref.window.CoCreateDnd && ref.window.CoCreateDnd.hasInit) return;\n\n  if (!ref.document.querySelector(\"#dnd-style\")) {\n    let dndStyle = ref.document.createElement(\"style\");\n    dndStyle.id = \"dnd-style\";\n    dndStyle.innerHTML = `    /* dnd specic */\n      [data-draggable=\"true\"], [data-cloneable=\"true\"]  {\n        touch-action: none;\n      }\n      /* dnd specic */`;\n    ref.document.head.append(dndStyle);\n  }\n\n  ref.document.addEventListener(\"dragstart\", e => {\n    e.preventDefault();\n    return false;\n  }); // disable selection\n\n  ref.document.addEventListener(\"selectstart\", e => {\n    let r = (0, _common.getCocs)(e.target, [vars.draggable, vars.cloneable]);\n    if (!Array.isArray(r)) return;\n    e.preventDefault();\n  }, {\n    passive: false\n  }); // touch\n\n  let mousemovee, mouseupe, mousedowne, touchmovee, touchheade, touchstarte;\n\n  if (!refs.has(ref.window)) {\n    touchstarte = function (e) {\n      // console.log()\n      if (touchTimeout) clearTimeout(touchTimeout);\n      touchTimeout = setTimeout(() => {\n        console.log('touch start');\n        ref.document.body.style.touchAction = \"none\";\n        e.preventDefault();\n        start(e, ref);\n      }, 1000);\n    };\n\n    touchheade = function (e) {\n      ref.document.body.style.touchAction = \"auto\";\n\n      if (!isDraging) {\n        if (touchTimeout) clearTimeout(touchTimeout);\n        return;\n      }\n\n      e.preventDefault();\n      end(e, ref);\n    };\n\n    touchmovee = function (e) {\n      if (!isDraging) {\n        if (touchTimeout) clearTimeout(touchTimeout);\n        console.log('touch scroll');\n        return;\n      }\n\n      console.log('touch dnd');\n      e.preventDefault(); // console.log(\"host touch move\");\n\n      let touch = e.touches[0];\n      let x = touch.clientX;\n      let y = touch.clientY;\n      let el = ref.document.elementFromPoint(x, y);\n      if (!el) return; // it's out of iframe\n      // sending object representing an event data\n\n      move({\n        x,\n        y,\n        target: el,\n        isTouch: true\n      }, ref);\n    };\n\n    mousedowne = function (e) {\n      mousedown.apply(this, [e, ref]);\n    };\n\n    mouseupe = function (e) {\n      mouseup.apply(this, [e, ref]);\n    };\n\n    mousemovee = function (e) {\n      mousemove.apply(this, [e, ref]);\n    };\n\n    refs.set(ref.window, {\n      mousemovee,\n      mouseupe,\n      mousedowne,\n      touchmovee,\n      touchheade,\n      touchstarte\n    });\n  } else {\n    ({\n      mousemovee,\n      mouseupe,\n      mousedowne,\n      touchmovee,\n      touchheade,\n      touchstarte\n    } = refs.get(ref.window));\n  }\n\n  ref.document.removeEventListener(\"touchstart\", touchstarte);\n  ref.document.addEventListener(\"touchstart\", touchstarte);\n  ref.document.removeEventListener(\"touchend\", touchheade, {\n    passive: false\n  });\n  ref.document.addEventListener(\"touchend\", touchheade, {\n    passive: false\n  });\n  ref.document.removeEventListener(\"touchmove\", touchmovee, {\n    passive: false\n  });\n  ref.document.addEventListener(\"touchmove\", touchmovee, {\n    passive: false\n  }); // touch\n  // mouse\n\n  ref.document.removeEventListener(\"mousedown\", mousedowne);\n  ref.document.addEventListener(\"mousedown\", mousedowne);\n  ref.document.removeEventListener(\"mouseup\", mouseupe);\n  ref.document.addEventListener(\"mouseup\", mouseupe);\n  ref.document.removeEventListener(\"mousemove\", mousemovee);\n  ref.document.addEventListener(\"mousemove\", mousemovee); // mouse\n}; // const init = () => {\n//   dnd(window, document);\n//   // console.log(\"dnd is loaded\", window.location.pathname);\n//   // function parse(text) {\n//   //   let doc = new DOMParser().parseFromString(text, \"text/html\");\n//   //   if (doc.head.children[0]) return doc.head.children[0];\n//   //   else return doc.body.children[0];\n//   // }\n// };\n\n\nexports.initIframe = initIframe;\nwindow.addEventListener(\"load\", () => {\n  if (window.parent !== window) return;\n  initIframe({\n    document,\n    window\n  });\n  (0, _dndConfig.default)();\n});\n\nconst initFunction = function ({\n  target,\n  onDnd,\n  onDndSuccess\n}) {\n  if (typeof onDndSuccess == \"function\") beforeDndSuccessCallback = onDndSuccess;\n\n  _common.initFunctionState.push({\n    target,\n    onDnd\n  });\n};\n\nexports.initFunction = initFunction;\n\nconst initElement = function ({\n  target,\n  dropable,\n  draggable,\n  cloneable,\n  handle,\n  group,\n  exclude,\n  beforeDndSuccess\n}) {\n  try {\n    if (typeof beforeDndSuccess == \"function\") beforeDndSuccessCallback = beforeDndSuccess;\n    if (group) target.setHiddenAttribute(vars.group_name, group);\n\n    if (exclude) {\n      try {\n        let excludeEls = target.querySelectorAll(exclude);\n        excludeEls.forEach(el => {\n          el.setHiddenAttribute(vars.exclude, \"true\");\n        });\n      } catch (err) {\n        if (err instanceof HTMLElement) {\n          let error = \"Dnd Sortable: exclude must be valid selector\";\n          console.error(error);\n        }\n\n        throw err;\n      }\n    }\n\n    if (dropable) target.querySelectorAll(dropable).forEach(el => {\n      el.setHiddenAttribute(vars.droppable, \"true\");\n    });\n    if (draggable) target.querySelectorAll(draggable).forEach(el => {\n      // el.style.touchAction = 'none'\n      el.setHiddenAttribute(vars.draggable, \"true\");\n    });\n    if (cloneable) target.querySelectorAll(cloneable).forEach(el => {\n      // el.style.touchAction = 'none'\n      el.setHiddenAttribute(vars.cloneable, \"true\");\n    });\n  } catch (err) {\n    if (err instanceof DOMException) {\n      let error = \"Dnd Sortable: handle must be a valid selector\";\n      console.error(error);\n      throw err;\n    } else throw err;\n  }\n};\n\nexports.initElement = initElement;\n\nfunction addNestedAttribute(el, cloneable) {\n  if (!el.children.length) return;\n  Array.from(el.children).forEach(el => {\n    addNestedAttribute(el);\n    el.setHiddenAttribute(vars.exclude, \"true\"); // el.style.touchAction = 'none'\n\n    el.setHiddenAttribute(vars.draggable, \"true\");\n    if (cloneable) el.setHiddenAttribute(vars.cloneable, \"true\");\n  });\n}\n\nconst initContainer = function ({\n  target,\n  cloneable = false,\n  nested = false,\n  handle,\n  group,\n  exclude\n}) {\n  if (group) target.setHiddenAttribute(vars.group_name, group);\n\n  if (exclude) {\n    try {\n      let excludeEls = target.querySelectorAll(exclude);\n      excludeEls.forEach(el => {\n        el.setHiddenAttribute(vars.exclude, \"true\");\n      });\n    } catch (err) {\n      if (err instanceof DOMException) {\n        let error = \"Dnd Sortable: exclude must be valid selector\";\n        console.error(error);\n        throw error;\n      } else throw err;\n    }\n  }\n\n  if (!target.tagName) {\n    let error = \"Dnd Sortable: Please provide a valid element\";\n    console.error(error);\n    throw error;\n  }\n\n  if (typeof cloneable != \"boolean\") {\n    let error = \"Dnd Sortable: please provide valid data type for cloneable\";\n    console.error(error);\n    throw error;\n  }\n\n  if (typeof nested != \"boolean\") {\n    let error = \"Dnd Sortable: please provide valid data type for nested\";\n    console.error(error);\n    throw error;\n  }\n\n  if (nested) {\n    addNestedAttribute(target, cloneable);\n  } else {\n    target.setHiddenAttribute(vars.droppable, \"true\");\n    if (target.children.length) Array.from(target.children).forEach(el => {\n      if (cloneable) {\n        // el.style.touchAction = 'none'\n        el.setHiddenAttribute(vars.cloneable, \"true\");\n      } else {\n        // el.style.touchAction = 'none'\n        el.setHiddenAttribute(vars.draggable, \"true\");\n      }\n\n      try {\n        let handleEls = el.querySelectorAll(handle);\n\n        if (handle && handleEls.length) {\n          // el.style.touchAction = 'none'\n          el.setHiddenAttribute(vars.draggable, \"true\");\n          handleEls.forEach(el => {\n            // el.style.touchAction = 'none'\n            el.setHiddenAttribute(vars.draggable, \"true\");\n          });\n        }\n      } catch (err) {\n        if (err instanceof DOMException) {\n          let error = \"Dnd Sortable: handle must be a valid selector\";\n          console.error(error);\n          throw error;\n        } else throw err;\n      }\n    });\n  }\n};\n\nexports.initContainer = initContainer;\nlet exp = {\n  initContainer,\n  initElement,\n  initFunction\n};\n\nfunction init(params) {\n  let {\n    mode\n  } = params;\n  delete params.mode;\n  if (!['function', 'element', 'container'].includes(mode)) throw new Error('invalid mode provided');\n  let funcName = 'init' + mode.charAt(0).toUpperCase() + mode.slice(1);\n  exp[funcName].apply(null, [params]);\n}\n\nvar _default = {\n  initIframe,\n  init\n};\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5kbmQvLi4vQ29DcmVhdGUtY29tcG9uZW50cy9Db0NyZWF0ZS1kbmQvc3JjL2luZGV4LmpzPzAyMzkiXSwibmFtZXMiOlsidG91Y2hUaW1lb3V0IiwiYmVmb3JlRG5kU3VjY2Vzc0NhbGxiYWNrIiwiYmVmb3JlRG5kU3VjY2VzcyIsImFwcGx5IiwiYXJndW1lbnRzIiwibW91c2Vtb3ZlIiwibW91c2V1cCIsIm1vdXNlZG93biIsInRvdWNoc3RhcnQiLCJ0b3VjaGVuZCIsInRvdWNobW92ZSIsIm9wdGlvbnMiLCJzY3JvbGxlciIsImF1dG9TY3JvbGxlciIsInNwZWVkIiwidGhyZXNob2xkIiwibXlEcm9wTWFya2VyIiwiZHJvcE1hcmtlciIsImRuZCIsIlZpcnR1YWxEbmQiLCJnaG9zdCIsIm9uIiwiZGF0YSIsImhpZGUiLCJnaG9zdEVmZmVjdCIsImUiLCJlbCIsIndpbmRvdyIsImRvY3VtZW50Iiwic3RhcnQiLCJyZWYiLCJkcmF3IiwiY2xvc2VzdEVsIiwib3JpZW50YXRpb24iLCJoYXNDaGlsZCIsInN0YXJ0R3JvdXAiLCJpc0RyYWdpbmciLCJjb25zb2xlUHJpbnRlZEVsIiwiciIsInRhcmdldCIsInZhcnMiLCJkcmFnZ2FibGUiLCJjbG9uZWFibGUiLCJoYW5kbGVhYmxlIiwiQXJyYXkiLCJpc0FycmF5IiwiYXR0IiwiaHRtbCIsImdldEF0dHJpYnV0ZSIsImRhdGFfaW5zZXJ0X2h0bWwiLCJjbG9uZU5vZGUiLCJoYXNIYW5kbGUiLCJnZXRBbnlBdHRyaWJ1dGUiLCJncm91cFJlc3VsdCIsImJvZHkiLCJzdHlsZSIsImN1cnNvciIsImRyYWdTdGFydCIsImVuZCIsImRyYWdFbmQiLCJkZWFjdGl2YXRlU2Nyb2xsIiwibW92ZSIsIngiLCJ5IiwiaXNUb3VjaCIsInN0b3BTY3JvbGwiLCJ1cGRhdGUiLCJncm91cEVsIiwiZ3JvdXBuYW1lIiwicGFyZW50RWxlbWVudCIsImRyb3BwYWJsZSIsImNhbGN1bGF0ZVNjcm9sbCIsImVsZW1lbnQiLCJvbk1vdXNlU2Nyb2xsTW92ZSIsImRyYWdPdmVyIiwid2hpY2giLCJyZWZzIiwiTWFwIiwiaW5pdElmcmFtZSIsImlzSWZyYW1lIiwiZnJhbWUiLCJmcmFtZVdpbmRvdyIsImNvbnRlbnRXaW5kb3ciLCJmcmFtZURvY3VtZW50IiwiY29udGVudERvY3VtZW50IiwicmVjdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImxlZnQiLCJ0b3AiLCJDb0NyZWF0ZURuZCIsImhhc0luaXQiLCJxdWVyeVNlbGVjdG9yIiwiZG5kU3R5bGUiLCJjcmVhdGVFbGVtZW50IiwiaWQiLCJpbm5lckhUTUwiLCJoZWFkIiwiYXBwZW5kIiwiYWRkRXZlbnRMaXN0ZW5lciIsInByZXZlbnREZWZhdWx0IiwicGFzc2l2ZSIsIm1vdXNlbW92ZWUiLCJtb3VzZXVwZSIsIm1vdXNlZG93bmUiLCJ0b3VjaG1vdmVlIiwidG91Y2hoZWFkZSIsInRvdWNoc3RhcnRlIiwiaGFzIiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCIsImNvbnNvbGUiLCJsb2ciLCJ0b3VjaEFjdGlvbiIsInRvdWNoIiwidG91Y2hlcyIsImNsaWVudFgiLCJjbGllbnRZIiwiZWxlbWVudEZyb21Qb2ludCIsInNldCIsImdldCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJwYXJlbnQiLCJpbml0RnVuY3Rpb24iLCJvbkRuZCIsIm9uRG5kU3VjY2VzcyIsImluaXRGdW5jdGlvblN0YXRlIiwicHVzaCIsImluaXRFbGVtZW50IiwiZHJvcGFibGUiLCJoYW5kbGUiLCJncm91cCIsImV4Y2x1ZGUiLCJzZXRIaWRkZW5BdHRyaWJ1dGUiLCJncm91cF9uYW1lIiwiZXhjbHVkZUVscyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiZXJyIiwiSFRNTEVsZW1lbnQiLCJlcnJvciIsIkRPTUV4Y2VwdGlvbiIsImFkZE5lc3RlZEF0dHJpYnV0ZSIsImNoaWxkcmVuIiwibGVuZ3RoIiwiZnJvbSIsImluaXRDb250YWluZXIiLCJuZXN0ZWQiLCJ0YWdOYW1lIiwiaGFuZGxlRWxzIiwiZXhwIiwiaW5pdCIsInBhcmFtcyIsIm1vZGUiLCJpbmNsdWRlcyIsIkVycm9yIiwiZnVuY05hbWUiLCJjaGFyQXQiLCJ0b1VwcGVyQ2FzZSIsInNsaWNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBWUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBbkJBOztBQUNBO0FBb0JBLElBQUlBLFlBQUo7QUFDQSxJQUFJQyx3QkFBSjs7QUFDQSxTQUFTQyxnQkFBVCxHQUE0QjtBQUMxQixNQUFJRCx3QkFBSixFQUNFLE9BQU9BLHdCQUF3QixDQUFDRSxLQUF6QixDQUErQixJQUEvQixFQUFxQ0MsU0FBckMsQ0FBUDtBQUNGLFNBQU8sRUFBUDtBQUNEOztBQUVELElBQUlDLFNBQUosRUFBZUMsT0FBZixFQUF3QkMsU0FBeEIsRUFBbUNDLFVBQW5DLEVBQStDQyxRQUEvQyxFQUF5REMsU0FBekQsQyxDQUVBO0FBRUE7O0FBRUEsSUFBSUMsT0FBTyxHQUFHO0FBQ1pDLFVBQVEsRUFBRSxJQUFJQyxvQkFBSixDQUFpQjtBQUFFQyxTQUFLLEVBQUUsQ0FBVDtBQUFZQyxhQUFTLEVBQUU7QUFBdkIsR0FBakIsQ0FERTtBQUdaQyxjQUFZLEVBQUUsSUFBSUMsa0JBQUo7QUFIRixDQUFkLEMsQ0FNQTs7QUFDQSxJQUFJO0FBQUVELGNBQUY7QUFBZ0JKO0FBQWhCLElBQTZCRCxPQUFqQztBQUNBLElBQUlPLEdBQUcsR0FBRyxJQUFJQyxtQkFBSixDQUFlakIsZ0JBQWYsQ0FBVjtBQUNBLElBQUlrQixLQUFKO0FBQ0FGLEdBQUcsQ0FBQ0csRUFBSixDQUFPLFdBQVAsRUFBcUJDLElBQUQsSUFBVTtBQUM1Qk4sY0FBWSxDQUFDTyxJQUFiO0FBQ0FILE9BQUssR0FBRyxJQUFJSSxtQkFBSixDQUFnQkYsSUFBSSxDQUFDRyxDQUFyQixFQUF3QkgsSUFBSSxDQUFDSSxFQUE3QixFQUFpQztBQUFFQyxVQUFGO0FBQVVDO0FBQVYsR0FBakMsQ0FBUjtBQUNBUixPQUFLLENBQUNTLEtBQU47QUFDRCxDQUpEO0FBS0FYLEdBQUcsQ0FBQ0csRUFBSixDQUFPLFNBQVAsRUFBbUJDLElBQUQsSUFBVTtBQUMxQk4sY0FBWSxDQUFDTyxJQUFiO0FBQ0EsTUFBSUgsS0FBSixFQUFXQSxLQUFLLENBQUNHLElBQU4sQ0FBV0QsSUFBSSxDQUFDUSxHQUFoQjtBQUNaLENBSEQ7QUFJQVosR0FBRyxDQUFDRyxFQUFKLENBQU8sVUFBUCxFQUFvQkMsSUFBRCxJQUFVO0FBQzNCO0FBQ0FOLGNBQVksQ0FBQ2UsSUFBYixDQUNFVCxJQUFJLENBQUNJLEVBRFAsRUFFRUosSUFBSSxDQUFDVSxTQUZQLEVBR0VWLElBQUksQ0FBQ1csV0FIUCxFQUlFLENBQUMsQ0FBQ1gsSUFBSSxDQUFDWSxRQUpULEVBS0VaLElBQUksQ0FBQ1EsR0FMUDtBQU9ELENBVEQ7QUFXQSxJQUFJSyxVQUFKO0FBQ0EsSUFBSUMsU0FBUyxHQUFHLEtBQWhCO0FBQ0EsSUFBSUMsZ0JBQWdCLEdBQUcsSUFBdkIsQyxDQUE2Qjs7QUFFN0IsU0FBU1IsS0FBVCxDQUFlSixDQUFmLEVBQWtCSyxHQUFsQixFQUF1QjtBQUNyQixNQUFJUSxDQUFDLEdBQUcscUJBQVFiLENBQUMsQ0FBQ2MsTUFBVixFQUFrQixDQUFDQyxJQUFJLENBQUNDLFNBQU4sRUFBaUJELElBQUksQ0FBQ0UsU0FBdEIsRUFBaUNGLElBQUksQ0FBQ0csVUFBdEMsQ0FBbEIsQ0FBUjtBQUVBLE1BQUksQ0FBQ0MsS0FBSyxDQUFDQyxPQUFOLENBQWNQLENBQWQsQ0FBTCxFQUF1QjtBQUN2QixNQUFJLENBQUNaLEVBQUQsRUFBS29CLEdBQUwsSUFBWVIsQ0FBaEI7O0FBSUEsVUFBUVEsR0FBUjtBQUNFLFNBQUtOLElBQUksQ0FBQ0UsU0FBVjtBQUNFLFVBQUlLLElBQUksR0FBR3JCLEVBQUUsQ0FBQ3NCLFlBQUgsQ0FBZ0JSLElBQUksQ0FBQ1MsZ0JBQXJCLENBQVg7O0FBQ0EsVUFBSUYsSUFBSixFQUFVO0FBQ1JyQixVQUFFLEdBQUcsbUJBQU1xQixJQUFOLENBQUw7QUFDQSxZQUFJLENBQUNyQixFQUFMLEVBQVM7QUFDVixPQUhELE1BR09BLEVBQUUsR0FBR0EsRUFBRSxDQUFDd0IsU0FBSCxDQUFhLElBQWIsQ0FBTDs7QUFDUDs7QUFDRixTQUFLVixJQUFJLENBQUNDLFNBQVY7QUFDRSxVQUFJVSxTQUFTLEdBQUd6QixFQUFFLENBQUMwQixlQUFILENBQW1CWixJQUFJLENBQUNHLFVBQXhCLENBQWhCO0FBQ0EsVUFBSVEsU0FBSixFQUFlO0FBQ2Y7O0FBRUY7QUFDRXpCLFFBQUUsR0FBRyxvQkFBT0EsRUFBUCxFQUFXYyxJQUFJLENBQUNDLFNBQWhCLENBQUw7QUFkSixHQVJxQixDQXlCckI7OztBQUNBLE1BQUlZLFdBQVcsR0FBRywwQkFBYTNCLEVBQWIsQ0FBbEI7QUFDQVMsWUFBVSxHQUFHa0IsV0FBVyxDQUFDLENBQUQsQ0FBeEI7QUFFQXZCLEtBQUcsQ0FBQ0YsUUFBSixDQUFhMEIsSUFBYixDQUFrQkMsS0FBbEIsQ0FBd0JDLE1BQXhCLEdBQWlDLHNCQUFqQztBQUVBcEIsV0FBUyxHQUFHLElBQVo7QUFFQWxCLEtBQUcsQ0FBQ3VDLFNBQUosQ0FBY2hDLENBQWQsRUFBaUJDLEVBQWpCLEVBQXFCLElBQXJCLEVBQTJCSSxHQUEzQixFQUFnQ2dCLEdBQWhDO0FBQ0Q7O0FBRUQsU0FBU1ksR0FBVCxDQUFhakMsQ0FBYixFQUFnQkssR0FBaEIsRUFBcUI7QUFDbkJBLEtBQUcsQ0FBQ0YsUUFBSixDQUFhMEIsSUFBYixDQUFrQkMsS0FBbEIsQ0FBd0JDLE1BQXhCLEdBQWlDLEVBQWpDO0FBQ0FwQixXQUFTLEdBQUcsS0FBWjtBQUVBbEIsS0FBRyxDQUFDeUMsT0FBSixDQUFZbEMsQ0FBWjtBQUNBVCxjQUFZLENBQUNPLElBQWI7QUFFQVgsVUFBUSxDQUFDZ0QsZ0JBQVQ7QUFFRDs7QUFFRCxTQUFTQyxJQUFULENBQWM7QUFBRUMsR0FBRjtBQUFLQyxHQUFMO0FBQVF4QixRQUFSO0FBQWdCeUI7QUFBaEIsQ0FBZCxFQUF5Q2xDLEdBQXpDLEVBQThDbUMsVUFBOUMsRUFBMEQ7QUFDeEQsTUFBSSxDQUFDN0IsU0FBTCxFQUFnQjtBQUVoQixNQUFJaEIsS0FBSixFQUFXQSxLQUFLLENBQUNXLElBQU4sQ0FBVztBQUFFK0IsS0FBRjtBQUFLQztBQUFMLEdBQVgsRUFBcUJqQyxHQUFyQjtBQUNYbEIsVUFBUSxDQUFDc0QsTUFBVCxDQUFnQkosQ0FBaEIsRUFBbUJDLENBQW5COztBQUNBLE1BQUkzQixTQUFKLEVBQWU7QUFDYjtBQUNBLFFBQUksQ0FBQytCLE9BQUQsRUFBVUMsU0FBVixJQUF1QiwwQkFBYTdCLE1BQWIsQ0FBM0I7O0FBQ0EsUUFBSUosVUFBVSxJQUFJaUMsU0FBbEIsRUFDQTtBQUNJLFVBQUlqQyxVQUFVLEtBQUtpQyxTQUFuQixFQUNGO0FBQ0UsV0FBRztBQUNILGNBQUlmLFdBQVcsR0FBRywwQkFBYWMsT0FBYixDQUFsQjtBQUNBLGNBQUksQ0FBQ2QsV0FBVyxDQUFDLENBQUQsQ0FBaEIsRUFBcUIsT0FGbEIsQ0FFMEI7O0FBQzdCYyxpQkFBTyxHQUFHZCxXQUFXLENBQUMsQ0FBRCxDQUFYLENBQWVnQixhQUF6QjtBQUNBRCxtQkFBUyxHQUFHZixXQUFXLENBQUMsQ0FBRCxDQUF2Qjs7QUFDQSxjQUFJbEIsVUFBVSxLQUFLaUMsU0FBbkIsRUFBOEI7QUFDNUI3QixrQkFBTSxHQUFHYyxXQUFXLENBQUMsQ0FBRCxDQUFwQjtBQUNBO0FBQ0Q7QUFDRixTQVRDLFFBU08sSUFUUDtBQVdEO0FBRUYsS0FqQkQsTUFrQkssSUFBR2xCLFVBQVUsS0FBS2lDLFNBQWxCLEVBQ0g7QUFDSCxHQXZCRCxNQXVCTztBQUNMLFFBQUloRCxLQUFKLEVBQVdBLEtBQUssQ0FBQ0csSUFBTjtBQUNaOztBQUVELE1BQUksQ0FBQ2dCLE1BQUwsRUFBYSxPQWhDMkMsQ0FnQ25DOztBQUVyQixNQUFJYixFQUFFLEdBQUcsb0JBQU9hLE1BQVAsRUFBZUMsSUFBSSxDQUFDOEIsU0FBcEIsQ0FBVCxDQWxDd0QsQ0FtQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOztBQUVBLE1BQUksQ0FBQzVDLEVBQUwsRUFBUzs7QUFFVCxNQUFJLENBQUN1QyxVQUFMLEVBQWlCO0FBQ2ZyRCxZQUFRLENBQUMyRCxlQUFULENBQXlCO0FBQ3ZCVCxPQUR1QjtBQUV2QkMsT0FGdUI7QUFHdkJTLGFBQU8sRUFBRTlDLEVBQUUsQ0FBQzJDLGFBSFc7QUFJdkJJLHVCQUFpQixFQUFHaEQsQ0FBRCxJQUFPb0MsSUFBSSxDQUFDcEMsQ0FBRCxFQUFJSyxHQUFKLEVBQVMsSUFBVDtBQUpQLEtBQXpCO0FBTUQsR0FyRHVELENBdUR4RDs7O0FBRUFaLEtBQUcsQ0FBQ3dELFFBQUosQ0FBYTtBQUFFWixLQUFGO0FBQUtDLEtBQUw7QUFBUXhCLFVBQU0sRUFBRWI7QUFBaEIsR0FBYixFQUFtQ0EsRUFBbkMsRUFBdUNJLEdBQXZDO0FBQ0Q7O0FBRUR2QixTQUFTLEdBQUcsQ0FBQ2tCLENBQUQsRUFBSUssR0FBSixLQUFZO0FBQ3RCO0FBRUEsTUFBSUwsQ0FBQyxDQUFDa0QsS0FBRixJQUFXLENBQWYsRUFBa0I7QUFFbEI5QyxPQUFLLENBQUNKLENBQUQsRUFBSUssR0FBSixDQUFMO0FBQ0QsQ0FORDs7QUFPQXhCLE9BQU8sR0FBRyxDQUFDbUIsQ0FBRCxFQUFJSyxHQUFKLEtBQVk7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLE1BQUlMLENBQUMsQ0FBQ2tELEtBQUYsSUFBVyxDQUFmLEVBQWtCO0FBRWxCakIsS0FBRyxDQUFDakMsQ0FBRCxFQUFJSyxHQUFKLENBQUg7QUFDRCxDQVZEOztBQVdBekIsU0FBUyxHQUFHLENBQUNvQixDQUFELEVBQUlLLEdBQUosS0FBWTtBQUN0QitCLE1BQUksQ0FBQ3BDLENBQUQsRUFBSUssR0FBSixDQUFKO0FBQ0QsQ0FGRCxDLENBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EsSUFBSThDLElBQUksR0FBRyxJQUFJQyxHQUFKLEVBQVg7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHLENBQUM7QUFBRUMsVUFBRjtBQUFZQyxPQUFaO0FBQW1CcEQsVUFBbkI7QUFBNkJEO0FBQTdCLENBQUQsS0FBMkM7QUFDNUQsTUFBSUcsR0FBSjs7QUFDQSxNQUFJaUQsUUFBSixFQUFjO0FBQ1osUUFBSUUsV0FBVyxHQUFHRCxLQUFLLENBQUNFLGFBQXhCO0FBQ0EsUUFBSUMsYUFBYSxHQUFHRixXQUFXLENBQUNyRCxRQUFaLElBQXdCb0QsS0FBSyxDQUFDSSxlQUFsRDtBQUNBLFFBQUlDLElBQUksR0FBR0wsS0FBSyxDQUFDTSxxQkFBTixFQUFYO0FBQ0F4RCxPQUFHLEdBQUc7QUFDSmdDLE9BQUMsRUFBRXVCLElBQUksQ0FBQ0UsSUFESjtBQUVKeEIsT0FBQyxFQUFFc0IsSUFBSSxDQUFDRyxHQUZKO0FBR0pSLFdBSEk7QUFJSnJELFlBQU0sRUFBRXNELFdBSko7QUFLSnJELGNBQVEsRUFBRXVELGFBTE47QUFNSkosY0FBUSxFQUFFO0FBTk4sS0FBTjtBQVFELEdBWkQsTUFZTztBQUNMakQsT0FBRyxHQUFHO0FBQUVnQyxPQUFDLEVBQUUsQ0FBTDtBQUFRQyxPQUFDLEVBQUUsQ0FBWDtBQUFjcEMsWUFBZDtBQUFzQkMsY0FBdEI7QUFBZ0NtRCxjQUFRLEVBQUU7QUFBMUMsS0FBTjtBQUNEOztBQUVDLE1BQUlqRCxHQUFHLENBQUNILE1BQUosQ0FBVzhELFdBQVgsSUFBMEIzRCxHQUFHLENBQUNILE1BQUosQ0FBVzhELFdBQVgsQ0FBdUJDLE9BQXJELEVBQThEOztBQUVoRSxNQUFJLENBQUM1RCxHQUFHLENBQUNGLFFBQUosQ0FBYStELGFBQWIsQ0FBMkIsWUFBM0IsQ0FBTCxFQUErQztBQUM3QyxRQUFJQyxRQUFRLEdBQUc5RCxHQUFHLENBQUNGLFFBQUosQ0FBYWlFLGFBQWIsQ0FBMkIsT0FBM0IsQ0FBZjtBQUNBRCxZQUFRLENBQUNFLEVBQVQsR0FBYyxXQUFkO0FBQ0FGLFlBQVEsQ0FBQ0csU0FBVCxHQUFzQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQSx1QkFKSTtBQUtBakUsT0FBRyxDQUFDRixRQUFKLENBQWFvRSxJQUFiLENBQWtCQyxNQUFsQixDQUF5QkwsUUFBekI7QUFDRDs7QUFFRDlELEtBQUcsQ0FBQ0YsUUFBSixDQUFhc0UsZ0JBQWIsQ0FBOEIsV0FBOUIsRUFBNEN6RSxDQUFELElBQU87QUFDaERBLEtBQUMsQ0FBQzBFLGNBQUY7QUFDQSxXQUFPLEtBQVA7QUFDRCxHQUhELEVBL0I0RCxDQW9DNUQ7O0FBQ0FyRSxLQUFHLENBQUNGLFFBQUosQ0FBYXNFLGdCQUFiLENBQThCLGFBQTlCLEVBQThDekUsQ0FBRCxJQUFPO0FBQ2xELFFBQUlhLENBQUMsR0FBRyxxQkFBUWIsQ0FBQyxDQUFDYyxNQUFWLEVBQWtCLENBQUNDLElBQUksQ0FBQ0MsU0FBTixFQUFpQkQsSUFBSSxDQUFDRSxTQUF0QixDQUFsQixDQUFSO0FBQ0EsUUFBSSxDQUFDRSxLQUFLLENBQUNDLE9BQU4sQ0FBY1AsQ0FBZCxDQUFMLEVBQXVCO0FBQ3ZCYixLQUFDLENBQUMwRSxjQUFGO0FBQ0QsR0FKRCxFQUlHO0FBQUNDLFdBQU8sRUFBRTtBQUFWLEdBSkgsRUFyQzRELENBMEM1RDs7QUFJQSxNQUFJQyxVQUFKLEVBQWlCQyxRQUFqQixFQUEyQkMsVUFBM0IsRUFBdUNDLFVBQXZDLEVBQW1EQyxVQUFuRCxFQUE4REMsV0FBOUQ7O0FBQ0EsTUFBRyxDQUFDOUIsSUFBSSxDQUFDK0IsR0FBTCxDQUFTN0UsR0FBRyxDQUFDSCxNQUFiLENBQUosRUFDQTtBQUVDK0UsZUFBVyxHQUFHLFVBQVVqRixDQUFWLEVBQWE7QUFDMUI7QUFFQSxVQUFHekIsWUFBSCxFQUNBNEcsWUFBWSxDQUFDNUcsWUFBRCxDQUFaO0FBQ0FBLGtCQUFZLEdBQUc2RyxVQUFVLENBQUMsTUFBTTtBQUM5QkMsZUFBTyxDQUFDQyxHQUFSLENBQVksYUFBWjtBQUNBakYsV0FBRyxDQUFDRixRQUFKLENBQWEwQixJQUFiLENBQWtCQyxLQUFsQixDQUF3QnlELFdBQXhCLEdBQXNDLE1BQXRDO0FBQ0F2RixTQUFDLENBQUMwRSxjQUFGO0FBQ0F0RSxhQUFLLENBQUNKLENBQUQsRUFBSUssR0FBSixDQUFMO0FBQ0QsT0FMd0IsRUFLdEIsSUFMc0IsQ0FBekI7QUFNRCxLQVhBOztBQWFFMkUsY0FBVSxHQUFHLFVBQVVoRixDQUFWLEVBQWE7QUFDM0JLLFNBQUcsQ0FBQ0YsUUFBSixDQUFhMEIsSUFBYixDQUFrQkMsS0FBbEIsQ0FBd0J5RCxXQUF4QixHQUFzQyxNQUF0Qzs7QUFDQSxVQUFJLENBQUM1RSxTQUFMLEVBQWdCO0FBQ2QsWUFBR3BDLFlBQUgsRUFDQTRHLFlBQVksQ0FBQzVHLFlBQUQsQ0FBWjtBQUNBO0FBQ0Q7O0FBRUR5QixPQUFDLENBQUMwRSxjQUFGO0FBQ0F6QyxTQUFHLENBQUNqQyxDQUFELEVBQUlLLEdBQUosQ0FBSDtBQUNELEtBVkU7O0FBWUEwRSxjQUFVLEdBQUcsVUFBVS9FLENBQVYsRUFBYTtBQUkzQixVQUFJLENBQUNXLFNBQUwsRUFBZ0I7QUFDWixZQUFHcEMsWUFBSCxFQUNGNEcsWUFBWSxDQUFDNUcsWUFBRCxDQUFaO0FBQ0E4RyxlQUFPLENBQUNDLEdBQVIsQ0FBWSxjQUFaO0FBQ0E7QUFDRDs7QUFFRkQsYUFBTyxDQUFDQyxHQUFSLENBQVksV0FBWjtBQUNEdEYsT0FBQyxDQUFDMEUsY0FBRixHQVo2QixDQWEzQjs7QUFFQSxVQUFJYyxLQUFLLEdBQUd4RixDQUFDLENBQUN5RixPQUFGLENBQVUsQ0FBVixDQUFaO0FBQ0EsVUFBSXBELENBQUMsR0FBR21ELEtBQUssQ0FBQ0UsT0FBZDtBQUNBLFVBQUlwRCxDQUFDLEdBQUdrRCxLQUFLLENBQUNHLE9BQWQ7QUFDQSxVQUFJMUYsRUFBRSxHQUFHSSxHQUFHLENBQUNGLFFBQUosQ0FBYXlGLGdCQUFiLENBQThCdkQsQ0FBOUIsRUFBaUNDLENBQWpDLENBQVQ7QUFDQSxVQUFJLENBQUNyQyxFQUFMLEVBQVMsT0FuQmtCLENBbUJWO0FBRWpCOztBQUNBbUMsVUFBSSxDQUFDO0FBQUVDLFNBQUY7QUFBS0MsU0FBTDtBQUFReEIsY0FBTSxFQUFFYixFQUFoQjtBQUFvQnNDLGVBQU8sRUFBRTtBQUE3QixPQUFELEVBQXNDbEMsR0FBdEMsQ0FBSjtBQUNELEtBdkJFOztBQXlCQXlFLGNBQVUsR0FBRyxVQUFVOUUsQ0FBVixFQUFhO0FBQzNCbEIsZUFBUyxDQUFDSixLQUFWLENBQWdCLElBQWhCLEVBQXNCLENBQUNzQixDQUFELEVBQUlLLEdBQUosQ0FBdEI7QUFDRCxLQUZFOztBQUlBd0UsWUFBUSxHQUFJLFVBQVU3RSxDQUFWLEVBQWE7QUFDMUJuQixhQUFPLENBQUNILEtBQVIsQ0FBYyxJQUFkLEVBQW9CLENBQUNzQixDQUFELEVBQUlLLEdBQUosQ0FBcEI7QUFDRCxLQUZFOztBQUlGdUUsY0FBVSxHQUFHLFVBQVU1RSxDQUFWLEVBQWE7QUFDekJwQixlQUFTLENBQUNGLEtBQVYsQ0FBZ0IsSUFBaEIsRUFBc0IsQ0FBQ3NCLENBQUQsRUFBSUssR0FBSixDQUF0QjtBQUNELEtBRkE7O0FBR0M4QyxRQUFJLENBQUMwQyxHQUFMLENBQVN4RixHQUFHLENBQUNILE1BQWIsRUFBcUI7QUFBQzBFLGdCQUFEO0FBQWNDLGNBQWQ7QUFBd0JDLGdCQUF4QjtBQUFvQ0MsZ0JBQXBDO0FBQWdEQyxnQkFBaEQ7QUFBMkRDO0FBQTNELEtBQXJCO0FBQ0QsR0FqRUQsTUFtRUE7QUFDRSxLQUFDO0FBQUNMLGdCQUFEO0FBQWNDLGNBQWQ7QUFBd0JDLGdCQUF4QjtBQUFvQ0MsZ0JBQXBDO0FBQWdEQyxnQkFBaEQ7QUFBMkRDO0FBQTNELFFBQTBFOUIsSUFBSSxDQUFDMkMsR0FBTCxDQUFTekYsR0FBRyxDQUFDSCxNQUFiLENBQTNFO0FBQ0Q7O0FBR0RHLEtBQUcsQ0FBQ0YsUUFBSixDQUFhNEYsbUJBQWIsQ0FBaUMsWUFBakMsRUFBK0NkLFdBQS9DO0FBQ0E1RSxLQUFHLENBQUNGLFFBQUosQ0FBYXNFLGdCQUFiLENBQThCLFlBQTlCLEVBQTRDUSxXQUE1QztBQUVBNUUsS0FBRyxDQUFDRixRQUFKLENBQWE0RixtQkFBYixDQUFpQyxVQUFqQyxFQUE0Q2YsVUFBNUMsRUFBeUQ7QUFBQ0wsV0FBTyxFQUFFO0FBQVYsR0FBekQ7QUFDQXRFLEtBQUcsQ0FBQ0YsUUFBSixDQUFhc0UsZ0JBQWIsQ0FBOEIsVUFBOUIsRUFBeUNPLFVBQXpDLEVBQXNEO0FBQUNMLFdBQU8sRUFBRTtBQUFWLEdBQXREO0FBRUF0RSxLQUFHLENBQUNGLFFBQUosQ0FBYTRGLG1CQUFiLENBQWlDLFdBQWpDLEVBQThDaEIsVUFBOUMsRUFBMEQ7QUFBQ0osV0FBTyxFQUFFO0FBQVYsR0FBMUQ7QUFDQXRFLEtBQUcsQ0FBQ0YsUUFBSixDQUFhc0UsZ0JBQWIsQ0FBOEIsV0FBOUIsRUFBMENNLFVBQTFDLEVBQXVEO0FBQUNKLFdBQU8sRUFBRTtBQUFWLEdBQXZELEVBOUg0RCxDQStINUQ7QUFDQTs7QUFFQXRFLEtBQUcsQ0FBQ0YsUUFBSixDQUFhNEYsbUJBQWIsQ0FBaUMsV0FBakMsRUFBOENqQixVQUE5QztBQUNBekUsS0FBRyxDQUFDRixRQUFKLENBQWFzRSxnQkFBYixDQUE4QixXQUE5QixFQUEyQ0ssVUFBM0M7QUFFQXpFLEtBQUcsQ0FBQ0YsUUFBSixDQUFhNEYsbUJBQWIsQ0FBaUMsU0FBakMsRUFBMkNsQixRQUEzQztBQUNBeEUsS0FBRyxDQUFDRixRQUFKLENBQWFzRSxnQkFBYixDQUE4QixTQUE5QixFQUF3Q0ksUUFBeEM7QUFHQXhFLEtBQUcsQ0FBQ0YsUUFBSixDQUFhNEYsbUJBQWIsQ0FBaUMsV0FBakMsRUFBNkNuQixVQUE3QztBQUNBdkUsS0FBRyxDQUFDRixRQUFKLENBQWFzRSxnQkFBYixDQUE4QixXQUE5QixFQUEwQ0csVUFBMUMsRUExSTRELENBMkk1RDtBQUdELENBOUlELEMsQ0FnSkE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBRUExRSxNQUFNLENBQUN1RSxnQkFBUCxDQUF3QixNQUF4QixFQUFnQyxNQUFNO0FBQ3BDLE1BQUd2RSxNQUFNLENBQUM4RixNQUFQLEtBQWtCOUYsTUFBckIsRUFBNkI7QUFDN0JtRCxZQUFVLENBQUM7QUFBRWxELFlBQUY7QUFBWUQ7QUFBWixHQUFELENBQVY7QUFDQTtBQUNELENBSkQ7O0FBTUEsTUFBTStGLFlBQVksR0FBRyxVQUFVO0FBQUVuRixRQUFGO0FBQVVvRixPQUFWO0FBQWlCQztBQUFqQixDQUFWLEVBQTJDO0FBQzlELE1BQUksT0FBT0EsWUFBUCxJQUF1QixVQUEzQixFQUNFM0gsd0JBQXdCLEdBQUcySCxZQUEzQjs7QUFFRkMsNEJBQWtCQyxJQUFsQixDQUF1QjtBQUFFdkYsVUFBRjtBQUFVb0Y7QUFBVixHQUF2QjtBQUNELENBTEQ7Ozs7QUFPQSxNQUFNSSxXQUFXLEdBQUcsVUFBVTtBQUM1QnhGLFFBRDRCO0FBRTVCeUYsVUFGNEI7QUFHNUJ2RixXQUg0QjtBQUk1QkMsV0FKNEI7QUFLNUJ1RixRQUw0QjtBQU01QkMsT0FONEI7QUFPNUJDLFNBUDRCO0FBUTVCakk7QUFSNEIsQ0FBVixFQVNqQjtBQUNELE1BQUk7QUFDRixRQUFJLE9BQU9BLGdCQUFQLElBQTJCLFVBQS9CLEVBQ0VELHdCQUF3QixHQUFHQyxnQkFBM0I7QUFDRixRQUFJZ0ksS0FBSixFQUFXM0YsTUFBTSxDQUFDNkYsa0JBQVAsQ0FBMEI1RixJQUFJLENBQUM2RixVQUEvQixFQUEyQ0gsS0FBM0M7O0FBRVgsUUFBSUMsT0FBSixFQUFhO0FBQ1gsVUFBSTtBQUNGLFlBQUlHLFVBQVUsR0FBRy9GLE1BQU0sQ0FBQ2dHLGdCQUFQLENBQXdCSixPQUF4QixDQUFqQjtBQUNBRyxrQkFBVSxDQUFDRSxPQUFYLENBQW9COUcsRUFBRCxJQUFRO0FBQ3pCQSxZQUFFLENBQUMwRyxrQkFBSCxDQUFzQjVGLElBQUksQ0FBQzJGLE9BQTNCLEVBQW9DLE1BQXBDO0FBQ0QsU0FGRDtBQUdELE9BTEQsQ0FLRSxPQUFPTSxHQUFQLEVBQVk7QUFDWixZQUFJQSxHQUFHLFlBQVlDLFdBQW5CLEVBQWdDO0FBQzlCLGNBQUlDLEtBQUssR0FBRyw4Q0FBWjtBQUNBN0IsaUJBQU8sQ0FBQzZCLEtBQVIsQ0FBY0EsS0FBZDtBQUNEOztBQUNELGNBQU1GLEdBQU47QUFDRDtBQUNGOztBQUVELFFBQUlULFFBQUosRUFDRXpGLE1BQU0sQ0FBQ2dHLGdCQUFQLENBQXdCUCxRQUF4QixFQUFrQ1EsT0FBbEMsQ0FBMkM5RyxFQUFELElBQVE7QUFDaERBLFFBQUUsQ0FBQzBHLGtCQUFILENBQXNCNUYsSUFBSSxDQUFDOEIsU0FBM0IsRUFBc0MsTUFBdEM7QUFDRCxLQUZEO0FBR0YsUUFBSTdCLFNBQUosRUFDRUYsTUFBTSxDQUFDZ0csZ0JBQVAsQ0FBd0I5RixTQUF4QixFQUFtQytGLE9BQW5DLENBQTRDOUcsRUFBRCxJQUFRO0FBQ2pEO0FBQ0FBLFFBQUUsQ0FBQzBHLGtCQUFILENBQXNCNUYsSUFBSSxDQUFDQyxTQUEzQixFQUFzQyxNQUF0QztBQUNELEtBSEQ7QUFLRixRQUFJQyxTQUFKLEVBQ0VILE1BQU0sQ0FBQ2dHLGdCQUFQLENBQXdCN0YsU0FBeEIsRUFBbUM4RixPQUFuQyxDQUE0QzlHLEVBQUQsSUFBUTtBQUNqRDtBQUNBQSxRQUFFLENBQUMwRyxrQkFBSCxDQUFzQjVGLElBQUksQ0FBQ0UsU0FBM0IsRUFBc0MsTUFBdEM7QUFDRCxLQUhEO0FBSUgsR0FuQ0QsQ0FtQ0UsT0FBTytGLEdBQVAsRUFBWTtBQUNaLFFBQUlBLEdBQUcsWUFBWUcsWUFBbkIsRUFBaUM7QUFDL0IsVUFBSUQsS0FBSyxHQUFHLCtDQUFaO0FBQ0E3QixhQUFPLENBQUM2QixLQUFSLENBQWNBLEtBQWQ7QUFDQSxZQUFNRixHQUFOO0FBQ0QsS0FKRCxNQUlPLE1BQU1BLEdBQU47QUFDUjtBQUNGLENBcEREOzs7O0FBc0RBLFNBQVNJLGtCQUFULENBQTRCbkgsRUFBNUIsRUFBZ0NnQixTQUFoQyxFQUEyQztBQUN6QyxNQUFJLENBQUNoQixFQUFFLENBQUNvSCxRQUFILENBQVlDLE1BQWpCLEVBQXlCO0FBQ3pCbkcsT0FBSyxDQUFDb0csSUFBTixDQUFXdEgsRUFBRSxDQUFDb0gsUUFBZCxFQUF3Qk4sT0FBeEIsQ0FBaUM5RyxFQUFELElBQVE7QUFDdENtSCxzQkFBa0IsQ0FBQ25ILEVBQUQsQ0FBbEI7QUFDQUEsTUFBRSxDQUFDMEcsa0JBQUgsQ0FBc0I1RixJQUFJLENBQUMyRixPQUEzQixFQUFvQyxNQUFwQyxFQUZzQyxDQUd0Qzs7QUFDQXpHLE1BQUUsQ0FBQzBHLGtCQUFILENBQXNCNUYsSUFBSSxDQUFDQyxTQUEzQixFQUFzQyxNQUF0QztBQUNBLFFBQUlDLFNBQUosRUFBZWhCLEVBQUUsQ0FBQzBHLGtCQUFILENBQXNCNUYsSUFBSSxDQUFDRSxTQUEzQixFQUFzQyxNQUF0QztBQUNoQixHQU5EO0FBT0Q7O0FBRUQsTUFBTXVHLGFBQWEsR0FBRyxVQUFVO0FBQzlCMUcsUUFEOEI7QUFFOUJHLFdBQVMsR0FBRyxLQUZrQjtBQUc5QndHLFFBQU0sR0FBRyxLQUhxQjtBQUk5QmpCLFFBSjhCO0FBSzlCQyxPQUw4QjtBQU05QkM7QUFOOEIsQ0FBVixFQU9uQjtBQUNELE1BQUlELEtBQUosRUFBVzNGLE1BQU0sQ0FBQzZGLGtCQUFQLENBQTBCNUYsSUFBSSxDQUFDNkYsVUFBL0IsRUFBMkNILEtBQTNDOztBQUNYLE1BQUlDLE9BQUosRUFBYTtBQUNYLFFBQUk7QUFDRixVQUFJRyxVQUFVLEdBQUcvRixNQUFNLENBQUNnRyxnQkFBUCxDQUF3QkosT0FBeEIsQ0FBakI7QUFDQUcsZ0JBQVUsQ0FBQ0UsT0FBWCxDQUFvQjlHLEVBQUQsSUFBUTtBQUN6QkEsVUFBRSxDQUFDMEcsa0JBQUgsQ0FBc0I1RixJQUFJLENBQUMyRixPQUEzQixFQUFvQyxNQUFwQztBQUNELE9BRkQ7QUFHRCxLQUxELENBS0UsT0FBT00sR0FBUCxFQUFZO0FBQ1osVUFBSUEsR0FBRyxZQUFZRyxZQUFuQixFQUFpQztBQUMvQixZQUFJRCxLQUFLLEdBQUcsOENBQVo7QUFDQTdCLGVBQU8sQ0FBQzZCLEtBQVIsQ0FBY0EsS0FBZDtBQUNBLGNBQU1BLEtBQU47QUFDRCxPQUpELE1BSU8sTUFBTUYsR0FBTjtBQUNSO0FBQ0Y7O0FBRUQsTUFBSSxDQUFDbEcsTUFBTSxDQUFDNEcsT0FBWixFQUFxQjtBQUNuQixRQUFJUixLQUFLLEdBQUcsOENBQVo7QUFDQTdCLFdBQU8sQ0FBQzZCLEtBQVIsQ0FBY0EsS0FBZDtBQUNBLFVBQU1BLEtBQU47QUFDRDs7QUFFRCxNQUFJLE9BQU9qRyxTQUFQLElBQW9CLFNBQXhCLEVBQW1DO0FBQ2pDLFFBQUlpRyxLQUFLLEdBQUcsNERBQVo7QUFDQTdCLFdBQU8sQ0FBQzZCLEtBQVIsQ0FBY0EsS0FBZDtBQUNBLFVBQU1BLEtBQU47QUFDRDs7QUFFRCxNQUFJLE9BQU9PLE1BQVAsSUFBaUIsU0FBckIsRUFBZ0M7QUFDOUIsUUFBSVAsS0FBSyxHQUFHLHlEQUFaO0FBQ0E3QixXQUFPLENBQUM2QixLQUFSLENBQWNBLEtBQWQ7QUFDQSxVQUFNQSxLQUFOO0FBQ0Q7O0FBRUQsTUFBSU8sTUFBSixFQUFZO0FBQ1ZMLHNCQUFrQixDQUFDdEcsTUFBRCxFQUFTRyxTQUFULENBQWxCO0FBQ0QsR0FGRCxNQUVPO0FBQ0xILFVBQU0sQ0FBQzZGLGtCQUFQLENBQTBCNUYsSUFBSSxDQUFDOEIsU0FBL0IsRUFBMEMsTUFBMUM7QUFFQSxRQUFJL0IsTUFBTSxDQUFDdUcsUUFBUCxDQUFnQkMsTUFBcEIsRUFDRW5HLEtBQUssQ0FBQ29HLElBQU4sQ0FBV3pHLE1BQU0sQ0FBQ3VHLFFBQWxCLEVBQTRCTixPQUE1QixDQUFxQzlHLEVBQUQsSUFBUTtBQUMxQyxVQUFJZ0IsU0FBSixFQUFlO0FBQ2I7QUFDQWhCLFVBQUUsQ0FBQzBHLGtCQUFILENBQXNCNUYsSUFBSSxDQUFDRSxTQUEzQixFQUFzQyxNQUF0QztBQUNELE9BSEQsTUFHTztBQUNMO0FBQ0FoQixVQUFFLENBQUMwRyxrQkFBSCxDQUFzQjVGLElBQUksQ0FBQ0MsU0FBM0IsRUFBc0MsTUFBdEM7QUFDRDs7QUFDRCxVQUFJO0FBQ0YsWUFBSTJHLFNBQVMsR0FBRzFILEVBQUUsQ0FBQzZHLGdCQUFILENBQW9CTixNQUFwQixDQUFoQjs7QUFDQSxZQUFJQSxNQUFNLElBQUltQixTQUFTLENBQUNMLE1BQXhCLEVBQWdDO0FBQzlCO0FBQ0FySCxZQUFFLENBQUMwRyxrQkFBSCxDQUFzQjVGLElBQUksQ0FBQ0MsU0FBM0IsRUFBc0MsTUFBdEM7QUFDQTJHLG1CQUFTLENBQUNaLE9BQVYsQ0FBbUI5RyxFQUFELElBQVE7QUFDeEI7QUFDQUEsY0FBRSxDQUFDMEcsa0JBQUgsQ0FBc0I1RixJQUFJLENBQUNDLFNBQTNCLEVBQXNDLE1BQXRDO0FBQ0QsV0FIRDtBQUlEO0FBQ0YsT0FWRCxDQVVFLE9BQU9nRyxHQUFQLEVBQVk7QUFDWixZQUFJQSxHQUFHLFlBQVlHLFlBQW5CLEVBQWlDO0FBQy9CLGNBQUlELEtBQUssR0FBRywrQ0FBWjtBQUNBN0IsaUJBQU8sQ0FBQzZCLEtBQVIsQ0FBY0EsS0FBZDtBQUNBLGdCQUFNQSxLQUFOO0FBQ0QsU0FKRCxNQUlPLE1BQU1GLEdBQU47QUFDUjtBQUNGLEtBekJEO0FBMEJIO0FBQ0YsQ0EzRUQ7OztBQXFGQSxJQUFJWSxHQUFHLEdBQUc7QUFDUkosZUFEUTtBQUVSbEIsYUFGUTtBQUdSTDtBQUhRLENBQVY7O0FBTUEsU0FBUzRCLElBQVQsQ0FBY0MsTUFBZCxFQUNBO0FBQ0UsTUFBSTtBQUFDQztBQUFELE1BQVFELE1BQVo7QUFDQSxTQUFPQSxNQUFNLENBQUNDLElBQWQ7QUFDQSxNQUFHLENBQUUsQ0FBQyxVQUFELEVBQWEsU0FBYixFQUF3QixXQUF4QixFQUFxQ0MsUUFBckMsQ0FBOENELElBQTlDLENBQUwsRUFDRSxNQUFNLElBQUlFLEtBQUosQ0FBVSx1QkFBVixDQUFOO0FBQ0YsTUFBSUMsUUFBUSxHQUFFLFNBQVNILElBQUksQ0FBQ0ksTUFBTCxDQUFZLENBQVosRUFBZUMsV0FBZixFQUFULEdBQXdDTCxJQUFJLENBQUNNLEtBQUwsQ0FBVyxDQUFYLENBQXREO0FBQ0FULEtBQUcsQ0FBQ00sUUFBRCxDQUFILENBQWN4SixLQUFkLENBQW9CLElBQXBCLEVBQTBCLENBQUNvSixNQUFELENBQTFCO0FBQ0Q7O2VBQ2M7QUFBQ3pFLFlBQUQ7QUFBYXdFO0FBQWIsQyIsImZpbGUiOiIuLi9Db0NyZWF0ZS1jb21wb25lbnRzL0NvQ3JlYXRlLWRuZC9zcmMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKmdsb2JhbCBIVE1MRWxlbWVudCovXG4vKmdsb2JhbCBET01FeGNlcHRpb24qL1xuaW1wb3J0IFwiLi9jb2xsYWJvcmF0aW9uLmpzXCI7XG5pbXBvcnQgZG5kQ29uZmlnIGZyb20gXCIuL2RuZC1jb25maWcuanNcIjtcbmltcG9ydCBcIi4vdXRpbC9pZnJhbWVcIjtcbmltcG9ydCB7XG4gIGRyb3BNYXJrZXIsXG4gIGdldENvYyxcbiAgZ2hvc3RFZmZlY3QsXG4gIGdldEdyb3VwTmFtZSxcbiAgcGFyc2UsXG4gIGdldENvY3MsXG4gIGRpc3RhbmNlVG9DaGlsZCxcbiAgYXV0b1Njcm9sbGVyLFxuICBpbml0RnVuY3Rpb25TdGF0ZSxcbn0gZnJvbSBcIi4vdXRpbC9jb21tb25cIjtcblxuaW1wb3J0IFZpcnR1YWxEbmQgZnJvbSBcIi4vdmlydHVhbERuZFwiO1xuaW1wb3J0IFwiLi91dGlsL29uQ2xpY2tMZWZ0RXZlbnRcIjtcbmltcG9ydCAqIGFzIHZhcnMgZnJvbSBcIi4vdXRpbC92YXJpYWJsZXMuanNcIjtcblxubGV0IHRvdWNoVGltZW91dDtcbmxldCBiZWZvcmVEbmRTdWNjZXNzQ2FsbGJhY2s7XG5mdW5jdGlvbiBiZWZvcmVEbmRTdWNjZXNzKCkge1xuICBpZiAoYmVmb3JlRG5kU3VjY2Vzc0NhbGxiYWNrKVxuICAgIHJldHVybiBiZWZvcmVEbmRTdWNjZXNzQ2FsbGJhY2suYXBwbHkobnVsbCwgYXJndW1lbnRzKTtcbiAgcmV0dXJuIHt9O1xufVxuXG5sZXQgbW91c2Vtb3ZlLCBtb3VzZXVwLCBtb3VzZWRvd24sIHRvdWNoc3RhcnQsIHRvdWNoZW5kLCB0b3VjaG1vdmU7XG5cbi8vIGV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRuZGYod2luZG93LCBkb2N1bWVudCwgb3B0aW9ucykge1xuXG4vLyB9XG5cbmxldCBvcHRpb25zID0ge1xuICBzY3JvbGxlcjogbmV3IGF1dG9TY3JvbGxlcih7IHNwZWVkOiA0LCB0aHJlc2hvbGQ6IDMgfSksXG5cbiAgbXlEcm9wTWFya2VyOiBuZXcgZHJvcE1hcmtlcigpLFxufTtcblxuLy8vLyBkZWZpbmluZyBldmVudHNcbmxldCB7IG15RHJvcE1hcmtlciwgc2Nyb2xsZXIgfSA9IG9wdGlvbnM7XG5sZXQgZG5kID0gbmV3IFZpcnR1YWxEbmQoYmVmb3JlRG5kU3VjY2Vzcyk7XG5sZXQgZ2hvc3Q7XG5kbmQub24oXCJkcmFnU3RhcnRcIiwgKGRhdGEpID0+IHtcbiAgbXlEcm9wTWFya2VyLmhpZGUoKTtcbiAgZ2hvc3QgPSBuZXcgZ2hvc3RFZmZlY3QoZGF0YS5lLCBkYXRhLmVsLCB7IHdpbmRvdywgZG9jdW1lbnQgfSk7XG4gIGdob3N0LnN0YXJ0KCk7XG59KTtcbmRuZC5vbihcImRyYWdFbmRcIiwgKGRhdGEpID0+IHtcbiAgbXlEcm9wTWFya2VyLmhpZGUoKTtcbiAgaWYgKGdob3N0KSBnaG9zdC5oaWRlKGRhdGEucmVmKTtcbn0pO1xuZG5kLm9uKFwiZHJhZ092ZXJcIiwgKGRhdGEpID0+IHtcbiAgLy8gaXQgd2lsbCBhbHdheXMgcnVuIHdoZW4gbW91c2Ugb3IgdG91Y2ggbW92ZXNcbiAgbXlEcm9wTWFya2VyLmRyYXcoXG4gICAgZGF0YS5lbCxcbiAgICBkYXRhLmNsb3Nlc3RFbCxcbiAgICBkYXRhLm9yaWVudGF0aW9uLFxuICAgICEhZGF0YS5oYXNDaGlsZCxcbiAgICBkYXRhLnJlZlxuICApO1xufSk7XG5cbmxldCBzdGFydEdyb3VwO1xubGV0IGlzRHJhZ2luZyA9IGZhbHNlO1xubGV0IGNvbnNvbGVQcmludGVkRWwgPSBudWxsOyAvLyBkZXYgb25seVxuXG5mdW5jdGlvbiBzdGFydChlLCByZWYpIHtcbiAgbGV0IHIgPSBnZXRDb2NzKGUudGFyZ2V0LCBbdmFycy5kcmFnZ2FibGUsIHZhcnMuY2xvbmVhYmxlLCB2YXJzLmhhbmRsZWFibGVdKTtcblxuICBpZiAoIUFycmF5LmlzQXJyYXkocikpIHJldHVybjtcbiAgbGV0IFtlbCwgYXR0XSA9IHI7XG5cblxuICBcbiAgc3dpdGNoIChhdHQpIHtcbiAgICBjYXNlIHZhcnMuY2xvbmVhYmxlOlxuICAgICAgbGV0IGh0bWwgPSBlbC5nZXRBdHRyaWJ1dGUodmFycy5kYXRhX2luc2VydF9odG1sKTtcbiAgICAgIGlmIChodG1sKSB7XG4gICAgICAgIGVsID0gcGFyc2UoaHRtbCk7XG4gICAgICAgIGlmICghZWwpIHJldHVybjtcbiAgICAgIH0gZWxzZSBlbCA9IGVsLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgdmFycy5kcmFnZ2FibGU6XG4gICAgICBsZXQgaGFzSGFuZGxlID0gZWwuZ2V0QW55QXR0cmlidXRlKHZhcnMuaGFuZGxlYWJsZSk7XG4gICAgICBpZiAoaGFzSGFuZGxlKSByZXR1cm47XG4gICAgICBicmVhaztcblxuICAgIGRlZmF1bHQ6XG4gICAgICBlbCA9IGdldENvYyhlbCwgdmFycy5kcmFnZ2FibGUpO1xuICB9XG5cbiAgLy8gZ2V0IGdyb3VwXG4gIGxldCBncm91cFJlc3VsdCA9IGdldEdyb3VwTmFtZShlbCk7XG4gIHN0YXJ0R3JvdXAgPSBncm91cFJlc3VsdFsxXTtcblxuICByZWYuZG9jdW1lbnQuYm9keS5zdHlsZS5jdXJzb3IgPSBcImNyb3NzaGFpciAhaW1wb3J0YW50XCI7XG5cbiAgaXNEcmFnaW5nID0gdHJ1ZTtcblxuICBkbmQuZHJhZ1N0YXJ0KGUsIGVsLCBudWxsLCByZWYsIGF0dCk7XG59XG5cbmZ1bmN0aW9uIGVuZChlLCByZWYpIHtcbiAgcmVmLmRvY3VtZW50LmJvZHkuc3R5bGUuY3Vyc29yID0gXCJcIjtcbiAgaXNEcmFnaW5nID0gZmFsc2U7XG5cbiAgZG5kLmRyYWdFbmQoZSk7XG4gIG15RHJvcE1hcmtlci5oaWRlKCk7XG5cbiAgc2Nyb2xsZXIuZGVhY3RpdmF0ZVNjcm9sbCgpO1xuICBcbn1cblxuZnVuY3Rpb24gbW92ZSh7IHgsIHksIHRhcmdldCwgaXNUb3VjaCB9LCByZWYsIHN0b3BTY3JvbGwpIHtcbiAgaWYgKCFpc0RyYWdpbmcpIHJldHVybjtcblxuICBpZiAoZ2hvc3QpIGdob3N0LmRyYXcoeyB4LCB5IH0sIHJlZik7XG4gIHNjcm9sbGVyLnVwZGF0ZSh4LCB5KTtcbiAgaWYgKGlzRHJhZ2luZykge1xuICAgIC8vIHNraXAgZ3JvdXAgbmFtZXNcbiAgICBsZXQgW2dyb3VwRWwsIGdyb3VwbmFtZV0gPSBnZXRHcm91cE5hbWUodGFyZ2V0KTtcbiAgICBpZiAoc3RhcnRHcm91cCAmJiBncm91cG5hbWUpXG4gICAge1xuICAgICAgICBpZiggc3RhcnRHcm91cCAhPT0gZ3JvdXBuYW1lKVxuICAgICAgeyAgXG4gICAgICAgIGRvIHtcbiAgICAgICAgbGV0IGdyb3VwUmVzdWx0ID0gZ2V0R3JvdXBOYW1lKGdyb3VwRWwpO1xuICAgICAgICBpZiAoIWdyb3VwUmVzdWx0WzBdKSByZXR1cm47IC8vIG9yIHJldHVyblxuICAgICAgICBncm91cEVsID0gZ3JvdXBSZXN1bHRbMF0ucGFyZW50RWxlbWVudDtcbiAgICAgICAgZ3JvdXBuYW1lID0gZ3JvdXBSZXN1bHRbMV07XG4gICAgICAgIGlmIChzdGFydEdyb3VwID09PSBncm91cG5hbWUpIHtcbiAgICAgICAgICB0YXJnZXQgPSBncm91cFJlc3VsdFswXTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfSB3aGlsZSAodHJ1ZSk7XG4gICAgICAgIFxuICAgICAgfVxuICAgICBcbiAgICB9XG4gICAgZWxzZSBpZihzdGFydEdyb3VwICE9PSBncm91cG5hbWUpXG4gICAgICByZXR1cm47XG4gIH0gZWxzZSB7XG4gICAgaWYgKGdob3N0KSBnaG9zdC5oaWRlKCk7XG4gIH1cblxuICBpZiAoIXRhcmdldCkgcmV0dXJuOyAvLyBpdCdzIG91dCBvZiBpZnJhbWUgaWYgdGhpcyBpcyBtdWx0aSBmcmFtZVxuXG4gIGxldCBlbCA9IGdldENvYyh0YXJnZXQsIHZhcnMuZHJvcHBhYmxlKTtcbiAgLy8gbGV0IG9uRWwgPSB0YXJnZXQ7IC8vIGRldlxuICAvLyBpZiAoY29uc29sZVByaW50ZWRFbCAhPSB0YXJnZXQpIHsgLy8gZGV2XG4gIC8vICAgLy8gZGV2XG4gIC8vICAgY29uc29sZS5sb2coXCJ5b3UgYXJlIG9uOiBcXG5cIiwgb25FbCwgXCJcXG5Ecm9waW5nIGluOiBcXG5cIiwgZWwpO1xuICAvLyAgIGNvbnNvbGVQcmludGVkRWwgPSBlbDtcbiAgLy8gfVxuXG4gIC8vIGlmKClcblxuICBpZiAoIWVsKSByZXR1cm47XG5cbiAgaWYgKCFzdG9wU2Nyb2xsKSB7XG4gICAgc2Nyb2xsZXIuY2FsY3VsYXRlU2Nyb2xsKHtcbiAgICAgIHgsXG4gICAgICB5LFxuICAgICAgZWxlbWVudDogZWwucGFyZW50RWxlbWVudCxcbiAgICAgIG9uTW91c2VTY3JvbGxNb3ZlOiAoZSkgPT4gbW92ZShlLCByZWYsIHRydWUpLFxuICAgIH0pO1xuICB9XG5cbiAgLy8gdG9kbzpcblxuICBkbmQuZHJhZ092ZXIoeyB4LCB5LCB0YXJnZXQ6IGVsIH0sIGVsLCByZWYpO1xufVxuXG5tb3VzZWRvd24gPSAoZSwgcmVmKSA9PiB7XG4gIC8vIGNvbnNvbGUubG9nKFwibW91c2UgZG93blwiLCBlKTtcblxuICBpZiAoZS53aGljaCAhPSAxKSByZXR1cm47XG5cbiAgc3RhcnQoZSwgcmVmKTtcbn07XG5tb3VzZXVwID0gKGUsIHJlZikgPT4ge1xuICAvLyBjb25zb2xlLmxvZyhcIm1vdXNlIHVwXCIsIGUpO1xuICAvLyB0b2RvOiB3aHkgd291bGQgd2UgY2hlY2sgZm9yIGhvdmVyYWJsZSBhbmQgd2hhdCBkbyB3ZSBkbyB3aGl0aCB0aGlzP1xuICAvLyBsZXQgZWwgPSBnZXRDb2MoZS50YXJnZXQsIGhvdmVyYWJsZSlcbiAgLy8gaWYgKCFlbCkgcmV0dXJuO1xuICAvL1xuXG4gIGlmIChlLndoaWNoICE9IDEpIHJldHVybjtcblxuICBlbmQoZSwgcmVmKTtcbn07XG5tb3VzZW1vdmUgPSAoZSwgcmVmKSA9PiB7XG4gIG1vdmUoZSwgcmVmKTtcbn07XG4vLyBsZXQgQ29DcmVhdGVDbGlja0xlZnQgPSAoZSkgPT4ge1xuLy8gICAvLyB0b2RvOiBub3Qgd29ya2luZyE/XG4vLyAgIGxldCBlbCA9IGdldENvYyhlLnRhcmdldCwgc2VsZWN0YWJsZSk7XG4vLyAgIGlmICghZWwpIHJldHVybjtcbi8vIH07XG5sZXQgcmVmcyA9IG5ldyBNYXAoKTtcbmNvbnN0IGluaXRJZnJhbWUgPSAoeyBpc0lmcmFtZSwgZnJhbWUsIGRvY3VtZW50LCB3aW5kb3cgfSkgPT4ge1xuICBsZXQgcmVmO1xuICBpZiAoaXNJZnJhbWUpIHtcbiAgICBsZXQgZnJhbWVXaW5kb3cgPSBmcmFtZS5jb250ZW50V2luZG93O1xuICAgIGxldCBmcmFtZURvY3VtZW50ID0gZnJhbWVXaW5kb3cuZG9jdW1lbnQgfHwgZnJhbWUuY29udGVudERvY3VtZW50O1xuICAgIGxldCByZWN0ID0gZnJhbWUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgcmVmID0ge1xuICAgICAgeDogcmVjdC5sZWZ0LFxuICAgICAgeTogcmVjdC50b3AsXG4gICAgICBmcmFtZSxcbiAgICAgIHdpbmRvdzogZnJhbWVXaW5kb3csXG4gICAgICBkb2N1bWVudDogZnJhbWVEb2N1bWVudCxcbiAgICAgIGlzSWZyYW1lOiB0cnVlLFxuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgcmVmID0geyB4OiAwLCB5OiAwLCB3aW5kb3csIGRvY3VtZW50LCBpc0lmcmFtZTogZmFsc2UgfTtcbiAgfVxuXG4gICAgaWYgKHJlZi53aW5kb3cuQ29DcmVhdGVEbmQgJiYgcmVmLndpbmRvdy5Db0NyZWF0ZURuZC5oYXNJbml0KSByZXR1cm47XG5cbiAgaWYgKCFyZWYuZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNkbmQtc3R5bGVcIikpIHtcbiAgICBsZXQgZG5kU3R5bGUgPSByZWYuZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICAgIGRuZFN0eWxlLmlkID0gXCJkbmQtc3R5bGVcIjtcbiAgICBkbmRTdHlsZS5pbm5lckhUTUwgPSBgICAgIC8qIGRuZCBzcGVjaWMgKi9cbiAgICAgIFtkYXRhLWRyYWdnYWJsZT1cInRydWVcIl0sIFtkYXRhLWNsb25lYWJsZT1cInRydWVcIl0gIHtcbiAgICAgICAgdG91Y2gtYWN0aW9uOiBub25lO1xuICAgICAgfVxuICAgICAgLyogZG5kIHNwZWNpYyAqL2A7XG4gICAgcmVmLmRvY3VtZW50LmhlYWQuYXBwZW5kKGRuZFN0eWxlKTtcbiAgfVxuXG4gIHJlZi5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiZHJhZ3N0YXJ0XCIsIChlKSA9PiB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSk7XG5cbiAgLy8gZGlzYWJsZSBzZWxlY3Rpb25cbiAgcmVmLmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzZWxlY3RzdGFydFwiLCAoZSkgPT4ge1xuICAgIGxldCByID0gZ2V0Q29jcyhlLnRhcmdldCwgW3ZhcnMuZHJhZ2dhYmxlLCB2YXJzLmNsb25lYWJsZV0pO1xuICAgIGlmICghQXJyYXkuaXNBcnJheShyKSkgcmV0dXJuO1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgfSwge3Bhc3NpdmU6IGZhbHNlfSk7XG4gIC8vIHRvdWNoXG5cblxuXG4gIGxldCBtb3VzZW1vdmVlICwgbW91c2V1cGUsIG1vdXNlZG93bmUgLHRvdWNobW92ZWUsIHRvdWNoaGVhZGUsdG91Y2hzdGFydGU7XG4gIGlmKCFyZWZzLmhhcyhyZWYud2luZG93KSlcbiAge1xuXG4gICB0b3VjaHN0YXJ0ZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgLy8gY29uc29sZS5sb2coKVxuICAgIFxuICAgIGlmKHRvdWNoVGltZW91dClcbiAgICBjbGVhclRpbWVvdXQodG91Y2hUaW1lb3V0KTtcbiAgICB0b3VjaFRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCd0b3VjaCBzdGFydCcpXG4gICAgICByZWYuZG9jdW1lbnQuYm9keS5zdHlsZS50b3VjaEFjdGlvbiA9IFwibm9uZVwiXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBzdGFydChlLCByZWYpO1xuICAgIH0sIDEwMDApO1xuICB9XG5cbiAgICAgdG91Y2hoZWFkZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgcmVmLmRvY3VtZW50LmJvZHkuc3R5bGUudG91Y2hBY3Rpb24gPSBcImF1dG9cIiAgXG4gICAgaWYgKCFpc0RyYWdpbmcpIHtcbiAgICAgIGlmKHRvdWNoVGltZW91dClcbiAgICAgIGNsZWFyVGltZW91dCh0b3VjaFRpbWVvdXQpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBlbmQoZSwgcmVmKTtcbiAgfVxuICBcbiAgICAgdG91Y2htb3ZlZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgXG4gIFxuXG4gICAgaWYgKCFpc0RyYWdpbmcpIHtcbiAgICAgICAgaWYodG91Y2hUaW1lb3V0KVxuICAgICAgY2xlYXJUaW1lb3V0KHRvdWNoVGltZW91dCk7XG4gICAgICBjb25zb2xlLmxvZygndG91Y2ggc2Nyb2xsJylcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgIGNvbnNvbGUubG9nKCd0b3VjaCBkbmQnKSBcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIC8vIGNvbnNvbGUubG9nKFwiaG9zdCB0b3VjaCBtb3ZlXCIpO1xuXG4gICAgbGV0IHRvdWNoID0gZS50b3VjaGVzWzBdO1xuICAgIGxldCB4ID0gdG91Y2guY2xpZW50WDtcbiAgICBsZXQgeSA9IHRvdWNoLmNsaWVudFk7XG4gICAgbGV0IGVsID0gcmVmLmRvY3VtZW50LmVsZW1lbnRGcm9tUG9pbnQoeCwgeSk7XG4gICAgaWYgKCFlbCkgcmV0dXJuOyAvLyBpdCdzIG91dCBvZiBpZnJhbWVcblxuICAgIC8vIHNlbmRpbmcgb2JqZWN0IHJlcHJlc2VudGluZyBhbiBldmVudCBkYXRhXG4gICAgbW92ZSh7IHgsIHksIHRhcmdldDogZWwsIGlzVG91Y2g6IHRydWUgfSwgcmVmKTtcbiAgfTtcbiAgXG4gICAgIG1vdXNlZG93bmUgPSBmdW5jdGlvbiAoZSkge1xuICAgIG1vdXNlZG93bi5hcHBseSh0aGlzLCBbZSwgcmVmXSk7XG4gIH1cbiAgXG4gICAgIG1vdXNldXBlID0gIGZ1bmN0aW9uIChlKSB7XG4gICAgbW91c2V1cC5hcHBseSh0aGlzLCBbZSwgcmVmXSk7XG4gIH1cbiAgIFxuICAgbW91c2Vtb3ZlZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgbW91c2Vtb3ZlLmFwcGx5KHRoaXMsIFtlLCByZWZdKTtcbiAgfTtcbiAgICByZWZzLnNldChyZWYud2luZG93LCB7bW91c2Vtb3ZlZSAsIG1vdXNldXBlLCBtb3VzZWRvd25lICx0b3VjaG1vdmVlLCB0b3VjaGhlYWRlLHRvdWNoc3RhcnRlfSlcbiAgfVxuICBlbHNlXG4gIHtcbiAgICAoe21vdXNlbW92ZWUgLCBtb3VzZXVwZSwgbW91c2Vkb3duZSAsdG91Y2htb3ZlZSwgdG91Y2hoZWFkZSx0b3VjaHN0YXJ0ZX0gPSByZWZzLmdldChyZWYud2luZG93KSk7XG4gIH1cbiAgXG4gIFxuICByZWYuZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRvdWNoc3RhcnRcIiwgdG91Y2hzdGFydGUpO1xuICByZWYuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoc3RhcnRcIiwgdG91Y2hzdGFydGUpO1xuXG4gIHJlZi5kb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwidG91Y2hlbmRcIix0b3VjaGhlYWRlICwge3Bhc3NpdmU6IGZhbHNlfSk7XG4gIHJlZi5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hlbmRcIix0b3VjaGhlYWRlICwge3Bhc3NpdmU6IGZhbHNlfSk7XG5cbiAgcmVmLmRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaG1vdmVcIiwgdG91Y2htb3ZlZSwge3Bhc3NpdmU6IGZhbHNlfSk7XG4gIHJlZi5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIsdG91Y2htb3ZlZSAsIHtwYXNzaXZlOiBmYWxzZX0pO1xuICAvLyB0b3VjaFxuICAvLyBtb3VzZVxuXG4gIHJlZi5kb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIG1vdXNlZG93bmUpO1xuICByZWYuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCBtb3VzZWRvd25lKTtcblxuICByZWYuZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIixtb3VzZXVwZSk7XG4gIHJlZi5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLG1vdXNldXBlKTtcblxuICBcbiAgcmVmLmRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIixtb3VzZW1vdmVlICk7XG4gIHJlZi5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsbW91c2Vtb3ZlZSApO1xuICAvLyBtb3VzZVxuICBcblxufTtcblxuLy8gY29uc3QgaW5pdCA9ICgpID0+IHtcbi8vICAgZG5kKHdpbmRvdywgZG9jdW1lbnQpO1xuLy8gICAvLyBjb25zb2xlLmxvZyhcImRuZCBpcyBsb2FkZWRcIiwgd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lKTtcblxuLy8gICAvLyBmdW5jdGlvbiBwYXJzZSh0ZXh0KSB7XG4vLyAgIC8vICAgbGV0IGRvYyA9IG5ldyBET01QYXJzZXIoKS5wYXJzZUZyb21TdHJpbmcodGV4dCwgXCJ0ZXh0L2h0bWxcIik7XG4vLyAgIC8vICAgaWYgKGRvYy5oZWFkLmNoaWxkcmVuWzBdKSByZXR1cm4gZG9jLmhlYWQuY2hpbGRyZW5bMF07XG4vLyAgIC8vICAgZWxzZSByZXR1cm4gZG9jLmJvZHkuY2hpbGRyZW5bMF07XG4vLyAgIC8vIH1cbi8vIH07XG5cbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCAoKSA9PiB7XG4gIGlmKHdpbmRvdy5wYXJlbnQgIT09IHdpbmRvdykgcmV0dXJuO1xuICBpbml0SWZyYW1lKHsgZG9jdW1lbnQsIHdpbmRvdyB9KTtcbiAgZG5kQ29uZmlnKCk7XG59KTtcblxuY29uc3QgaW5pdEZ1bmN0aW9uID0gZnVuY3Rpb24gKHsgdGFyZ2V0LCBvbkRuZCwgb25EbmRTdWNjZXNzIH0pIHtcbiAgaWYgKHR5cGVvZiBvbkRuZFN1Y2Nlc3MgPT0gXCJmdW5jdGlvblwiKVxuICAgIGJlZm9yZURuZFN1Y2Nlc3NDYWxsYmFjayA9IG9uRG5kU3VjY2VzcztcblxuICBpbml0RnVuY3Rpb25TdGF0ZS5wdXNoKHsgdGFyZ2V0LCBvbkRuZCB9KTtcbn07XG5cbmNvbnN0IGluaXRFbGVtZW50ID0gZnVuY3Rpb24gKHtcbiAgdGFyZ2V0LFxuICBkcm9wYWJsZSxcbiAgZHJhZ2dhYmxlLFxuICBjbG9uZWFibGUsXG4gIGhhbmRsZSxcbiAgZ3JvdXAsXG4gIGV4Y2x1ZGUsXG4gIGJlZm9yZURuZFN1Y2Nlc3MsXG59KSB7XG4gIHRyeSB7XG4gICAgaWYgKHR5cGVvZiBiZWZvcmVEbmRTdWNjZXNzID09IFwiZnVuY3Rpb25cIilcbiAgICAgIGJlZm9yZURuZFN1Y2Nlc3NDYWxsYmFjayA9IGJlZm9yZURuZFN1Y2Nlc3M7XG4gICAgaWYgKGdyb3VwKSB0YXJnZXQuc2V0SGlkZGVuQXR0cmlidXRlKHZhcnMuZ3JvdXBfbmFtZSwgZ3JvdXApO1xuXG4gICAgaWYgKGV4Y2x1ZGUpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGxldCBleGNsdWRlRWxzID0gdGFyZ2V0LnF1ZXJ5U2VsZWN0b3JBbGwoZXhjbHVkZSk7XG4gICAgICAgIGV4Y2x1ZGVFbHMuZm9yRWFjaCgoZWwpID0+IHtcbiAgICAgICAgICBlbC5zZXRIaWRkZW5BdHRyaWJ1dGUodmFycy5leGNsdWRlLCBcInRydWVcIik7XG4gICAgICAgIH0pO1xuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGlmIChlcnIgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkge1xuICAgICAgICAgIGxldCBlcnJvciA9IFwiRG5kIFNvcnRhYmxlOiBleGNsdWRlIG11c3QgYmUgdmFsaWQgc2VsZWN0b3JcIjtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBlcnI7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGRyb3BhYmxlKVxuICAgICAgdGFyZ2V0LnF1ZXJ5U2VsZWN0b3JBbGwoZHJvcGFibGUpLmZvckVhY2goKGVsKSA9PiB7XG4gICAgICAgIGVsLnNldEhpZGRlbkF0dHJpYnV0ZSh2YXJzLmRyb3BwYWJsZSwgXCJ0cnVlXCIpO1xuICAgICAgfSk7XG4gICAgaWYgKGRyYWdnYWJsZSlcbiAgICAgIHRhcmdldC5xdWVyeVNlbGVjdG9yQWxsKGRyYWdnYWJsZSkuZm9yRWFjaCgoZWwpID0+IHtcbiAgICAgICAgLy8gZWwuc3R5bGUudG91Y2hBY3Rpb24gPSAnbm9uZSdcbiAgICAgICAgZWwuc2V0SGlkZGVuQXR0cmlidXRlKHZhcnMuZHJhZ2dhYmxlLCBcInRydWVcIik7XG4gICAgICB9KTtcblxuICAgIGlmIChjbG9uZWFibGUpXG4gICAgICB0YXJnZXQucXVlcnlTZWxlY3RvckFsbChjbG9uZWFibGUpLmZvckVhY2goKGVsKSA9PiB7XG4gICAgICAgIC8vIGVsLnN0eWxlLnRvdWNoQWN0aW9uID0gJ25vbmUnXG4gICAgICAgIGVsLnNldEhpZGRlbkF0dHJpYnV0ZSh2YXJzLmNsb25lYWJsZSwgXCJ0cnVlXCIpO1xuICAgICAgfSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGlmIChlcnIgaW5zdGFuY2VvZiBET01FeGNlcHRpb24pIHtcbiAgICAgIGxldCBlcnJvciA9IFwiRG5kIFNvcnRhYmxlOiBoYW5kbGUgbXVzdCBiZSBhIHZhbGlkIHNlbGVjdG9yXCI7XG4gICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICAgIHRocm93IGVycjtcbiAgICB9IGVsc2UgdGhyb3cgZXJyO1xuICB9XG59O1xuXG5mdW5jdGlvbiBhZGROZXN0ZWRBdHRyaWJ1dGUoZWwsIGNsb25lYWJsZSkge1xuICBpZiAoIWVsLmNoaWxkcmVuLmxlbmd0aCkgcmV0dXJuO1xuICBBcnJheS5mcm9tKGVsLmNoaWxkcmVuKS5mb3JFYWNoKChlbCkgPT4ge1xuICAgIGFkZE5lc3RlZEF0dHJpYnV0ZShlbCk7XG4gICAgZWwuc2V0SGlkZGVuQXR0cmlidXRlKHZhcnMuZXhjbHVkZSwgXCJ0cnVlXCIpO1xuICAgIC8vIGVsLnN0eWxlLnRvdWNoQWN0aW9uID0gJ25vbmUnXG4gICAgZWwuc2V0SGlkZGVuQXR0cmlidXRlKHZhcnMuZHJhZ2dhYmxlLCBcInRydWVcIik7XG4gICAgaWYgKGNsb25lYWJsZSkgZWwuc2V0SGlkZGVuQXR0cmlidXRlKHZhcnMuY2xvbmVhYmxlLCBcInRydWVcIik7XG4gIH0pO1xufVxuXG5jb25zdCBpbml0Q29udGFpbmVyID0gZnVuY3Rpb24gKHtcbiAgdGFyZ2V0LFxuICBjbG9uZWFibGUgPSBmYWxzZSxcbiAgbmVzdGVkID0gZmFsc2UsXG4gIGhhbmRsZSxcbiAgZ3JvdXAsXG4gIGV4Y2x1ZGUsXG59KSB7XG4gIGlmIChncm91cCkgdGFyZ2V0LnNldEhpZGRlbkF0dHJpYnV0ZSh2YXJzLmdyb3VwX25hbWUsIGdyb3VwKTtcbiAgaWYgKGV4Y2x1ZGUpIHtcbiAgICB0cnkge1xuICAgICAgbGV0IGV4Y2x1ZGVFbHMgPSB0YXJnZXQucXVlcnlTZWxlY3RvckFsbChleGNsdWRlKTtcbiAgICAgIGV4Y2x1ZGVFbHMuZm9yRWFjaCgoZWwpID0+IHtcbiAgICAgICAgZWwuc2V0SGlkZGVuQXR0cmlidXRlKHZhcnMuZXhjbHVkZSwgXCJ0cnVlXCIpO1xuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBpZiAoZXJyIGluc3RhbmNlb2YgRE9NRXhjZXB0aW9uKSB7XG4gICAgICAgIGxldCBlcnJvciA9IFwiRG5kIFNvcnRhYmxlOiBleGNsdWRlIG11c3QgYmUgdmFsaWQgc2VsZWN0b3JcIjtcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgICAgfSBlbHNlIHRocm93IGVycjtcbiAgICB9XG4gIH1cblxuICBpZiAoIXRhcmdldC50YWdOYW1lKSB7XG4gICAgbGV0IGVycm9yID0gXCJEbmQgU29ydGFibGU6IFBsZWFzZSBwcm92aWRlIGEgdmFsaWQgZWxlbWVudFwiO1xuICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgIHRocm93IGVycm9yO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBjbG9uZWFibGUgIT0gXCJib29sZWFuXCIpIHtcbiAgICBsZXQgZXJyb3IgPSBcIkRuZCBTb3J0YWJsZTogcGxlYXNlIHByb3ZpZGUgdmFsaWQgZGF0YSB0eXBlIGZvciBjbG9uZWFibGVcIjtcbiAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxuXG4gIGlmICh0eXBlb2YgbmVzdGVkICE9IFwiYm9vbGVhblwiKSB7XG4gICAgbGV0IGVycm9yID0gXCJEbmQgU29ydGFibGU6IHBsZWFzZSBwcm92aWRlIHZhbGlkIGRhdGEgdHlwZSBmb3IgbmVzdGVkXCI7XG4gICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cblxuICBpZiAobmVzdGVkKSB7XG4gICAgYWRkTmVzdGVkQXR0cmlidXRlKHRhcmdldCwgY2xvbmVhYmxlKTtcbiAgfSBlbHNlIHtcbiAgICB0YXJnZXQuc2V0SGlkZGVuQXR0cmlidXRlKHZhcnMuZHJvcHBhYmxlLCBcInRydWVcIik7XG5cbiAgICBpZiAodGFyZ2V0LmNoaWxkcmVuLmxlbmd0aClcbiAgICAgIEFycmF5LmZyb20odGFyZ2V0LmNoaWxkcmVuKS5mb3JFYWNoKChlbCkgPT4ge1xuICAgICAgICBpZiAoY2xvbmVhYmxlKSB7XG4gICAgICAgICAgLy8gZWwuc3R5bGUudG91Y2hBY3Rpb24gPSAnbm9uZSdcbiAgICAgICAgICBlbC5zZXRIaWRkZW5BdHRyaWJ1dGUodmFycy5jbG9uZWFibGUsIFwidHJ1ZVwiKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBlbC5zdHlsZS50b3VjaEFjdGlvbiA9ICdub25lJ1xuICAgICAgICAgIGVsLnNldEhpZGRlbkF0dHJpYnV0ZSh2YXJzLmRyYWdnYWJsZSwgXCJ0cnVlXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgbGV0IGhhbmRsZUVscyA9IGVsLnF1ZXJ5U2VsZWN0b3JBbGwoaGFuZGxlKTtcbiAgICAgICAgICBpZiAoaGFuZGxlICYmIGhhbmRsZUVscy5sZW5ndGgpIHtcbiAgICAgICAgICAgIC8vIGVsLnN0eWxlLnRvdWNoQWN0aW9uID0gJ25vbmUnXG4gICAgICAgICAgICBlbC5zZXRIaWRkZW5BdHRyaWJ1dGUodmFycy5kcmFnZ2FibGUsIFwidHJ1ZVwiKTtcbiAgICAgICAgICAgIGhhbmRsZUVscy5mb3JFYWNoKChlbCkgPT4ge1xuICAgICAgICAgICAgICAvLyBlbC5zdHlsZS50b3VjaEFjdGlvbiA9ICdub25lJ1xuICAgICAgICAgICAgICBlbC5zZXRIaWRkZW5BdHRyaWJ1dGUodmFycy5kcmFnZ2FibGUsIFwidHJ1ZVwiKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgaWYgKGVyciBpbnN0YW5jZW9mIERPTUV4Y2VwdGlvbikge1xuICAgICAgICAgICAgbGV0IGVycm9yID0gXCJEbmQgU29ydGFibGU6IGhhbmRsZSBtdXN0IGJlIGEgdmFsaWQgc2VsZWN0b3JcIjtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgICAgfSBlbHNlIHRocm93IGVycjtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gIH1cbn07XG5cblxuZXhwb3J0IHsgIFxuICBpbml0Q29udGFpbmVyLFxuICBpbml0RWxlbWVudCxcbiAgaW5pdEZ1bmN0aW9uLFxuICBpbml0SWZyYW1lXG59O1xuXG5sZXQgZXhwID0geyAgXG4gIGluaXRDb250YWluZXIsXG4gIGluaXRFbGVtZW50LFxuICBpbml0RnVuY3Rpb24sXG59O1xuXG5mdW5jdGlvbiBpbml0KHBhcmFtcylcbntcbiAgbGV0IHttb2RlfT0gcGFyYW1zOyBcbiAgZGVsZXRlIHBhcmFtcy5tb2RlO1xuICBpZighIFsnZnVuY3Rpb24nLCAnZWxlbWVudCcsICdjb250YWluZXInXS5pbmNsdWRlcyhtb2RlKSApXG4gICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIG1vZGUgcHJvdmlkZWQnKSBcbiAgbGV0IGZ1bmNOYW1lID0naW5pdCcgKyBtb2RlLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgbW9kZS5zbGljZSgxKTtcbiAgZXhwW2Z1bmNOYW1lXS5hcHBseShudWxsLCBbcGFyYW1zXSlcbn1cbmV4cG9ydCBkZWZhdWx0IHtpbml0SWZyYW1lLCBpbml0fTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../CoCreate-components/CoCreate-dnd/src/index.js\n");

/***/ }),

/***/ "../CoCreate-components/CoCreate-dnd/src/util/common.js":
/*!**************************************************************!*\
  !*** ../CoCreate-components/CoCreate-dnd/src/util/common.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCoc = getCoc;\nexports.getCocs = getCocs;\nexports.getGroupName = getGroupName;\nexports.computeStyles = computeStyles;\nexports.randomId = randomId;\nexports.dropMarker = dropMarker;\nexports.parse = parse;\nexports.ghostEffect = ghostEffect;\nexports.pDistance = pDistance;\nexports.closestChild = closestChild;\nexports.distanceToChild = distanceToChild;\nexports.distanceToChildLeftRight = distanceToChildLeftRight;\nexports.distanceToChildTopBottom = distanceToChildTopBottom;\nexports.autoScroller = autoScroller;\nObject.defineProperty(exports, \"initFunctionState\", {\n  enumerable: true,\n  get: function () {\n    return _domContext.initFunctionState;\n  }\n});\nexports.dndContext = void 0;\n\nvar _variables = __webpack_require__(/*! ./variables */ \"../CoCreate-components/CoCreate-dnd/src/util/variables.js\");\n\nvar _domContext = _interopRequireWildcard(__webpack_require__(/*! ./domContext2 */ \"../CoCreate-components/CoCreate-dnd/src/util/domContext2.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n//find the global context\nlet parentWindow = window;\n\nwhile (parentWindow !== window.parent) parentWindow = window.parent;\n\nlet dndContext;\nexports.dndContext = dndContext;\n\nif (!parentWindow.dndContext) {\n  exports.dndContext = dndContext = new _domContext.default();\n  parentWindow.dndContext = dndContext;\n} else exports.dndContext = dndContext = parentWindow.dndContext;\n\nfunction getCoc(el, att) {\n  if (!el.tagName) el = el.parentElement;\n  return dndContext.getContext(el, att);\n}\n\nfunction getCocs(el, attList) {\n  if (!el.tagName) el = el.parentElement;\n  return dndContext.getContexts(el, attList);\n}\n\nfunction getGroupName(el) {\n  if (!el.tagName) el = el.parentElement;\n\n  do {\n    let groupName = el.getAttribute(_variables.group_name);\n    if (groupName) return [el, groupName];\n    el = el.parentElement;\n    if (!el) return [null, undefined];\n  } while (true);\n}\n\nfunction computeStyles(el, properties) {\n  let computed = window.getComputedStyle(el);\n  let result = {};\n  properties.forEach(property => {\n    result[property] = parseInt(computed[property]);\n  });\n  return result;\n}\n\nfunction randomId() {\n  const uint32 = window.crypto.getRandomValues(new Uint32Array(1))[0];\n  return uint32.toString(16);\n}\n\nlet lasttransition = \"none\";\n\nfunction dropMarker(options) {\n  options = Object.assign({\n    borderSize: 2,\n    dropMarkerMargin: 5\n  }, options);\n  let marker = document.createElement(\"div\");\n  marker.id = \"dropMarker\"; // marker.style.backgroundColor = \"green\";\n  // marker.style.position = \"absolute\";\n  // marker.style.display = \"none\";\n\n  marker.style.pointerEvents = \"none\";\n  this.lastOrigntaion = undefined;\n  document.body.append(marker);\n  this.obj = marker;\n\n  this.draw = function (parent, el, orientation, isInside, ref) {\n    marker.style.display = \"block\";\n    let rect = el.getBoundingClientRect();\n\n    if (!rect.width && !rect.height) {\n      rect = parent.getBoundingClientRect();\n      orientation = \"top\";\n    }\n\n    switch (orientation) {\n      case \"top\":\n      case \"bottom\":\n        // order is important to fix rectangle bug\n        marker.style.height = options.borderSize + \"px\";\n        marker.style.width = rect.width + \"px\";\n        break;\n\n      case \"left\":\n      case \"right\":\n        marker.style.width = options.borderSize + \"px\";\n        marker.style.height = rect.height + \"px\";\n        break;\n\n      default:\n        throw new Error(\"one type of orientation must be specified\");\n    }\n\n    if (parent != el) {\n      let prect = parent.getBoundingClientRect();\n      let parentSize = prect[orientation];\n      let childSize = rect[orientation];\n      if (Math.abs(parentSize - childSize) < options.dropMarkerMargin * 2) isInside = true;\n    }\n\n    let frameRect;\n    if (ref.frame) frameRect = ref.frame.getBoundingClientRect();else frameRect = {\n      top: 0,\n      left: 0\n    };\n    marker.style.transition = \"top,left 0.2s ease-in-out\";\n\n    switch (orientation) {\n      case \"top\":\n        marker.style.top = frameRect.top + rect.top - options.borderSize / 2 + window.scrollY + (isInside ? options.dropMarkerMargin : -options.dropMarkerMargin) + \"px\";\n        marker.style.left = frameRect.left + rect.left - options.borderSize / 2 + window.scrollX + \"px\";\n        break;\n\n      case \"bottom\":\n        marker.style.top = frameRect.top + rect.bottom - options.borderSize / 2 + window.scrollY + (isInside ? -options.dropMarkerMargin : options.dropMarkerMargin) + \"px\";\n        marker.style.left = frameRect.left + rect.left - options.borderSize / 2 + window.scrollX + \"px\";\n        break;\n\n      case \"left\":\n        marker.style.top = frameRect.top + rect.top - options.borderSize / 2 + window.scrollY + \"px\";\n        marker.style.left = frameRect.left + rect.left - options.borderSize / 2 + window.scrollX + (isInside ? options.dropMarkerMargin : -options.dropMarkerMargin) + \"px\";\n        break;\n\n      case \"right\":\n        marker.style.top = frameRect.top + rect.top - options.borderSize / 2 + window.scrollY + \"px\";\n        marker.style.left = frameRect.left + rect.right - options.borderSize / 2 + window.scrollX + (isInside ? -options.dropMarkerMargin : options.dropMarkerMargin) + \"px\";\n        break;\n\n      default:\n        throw new Error(\"one type of orientation must be specified\");\n    } // marker.style.transition = \"all 0.2s ease-in-out\";\n\n\n    this.lastOrigntaion = orientation;\n  };\n\n  this.hide = function (el) {\n    marker.style.display = \"none\";\n  };\n}\n\nfunction parse(text) {\n  let doc = new DOMParser().parseFromString(text, \"text/html\");\n  if (doc.head.children[0]) return doc.head.children[0];else return doc.body.children[0];\n}\n\nfunction ghostEffect(elementEvent, el, ref) {\n  this.effectCb;\n  el.removeAttribute(\"CoC-dragging\");\n\n  this.start = () => {\n    this.cloneEl = el.cloneNode(true);\n    let {\n      width,\n      height\n    } = ref.window.getComputedStyle(el);\n    let cloneElStyle = window.getComputedStyle(this.cloneEl);\n    this.wrapper = document.createElement(\"div\");\n    this.wrapper.style.height = height;\n    this.wrapper.style.width = width;\n    this.wrapper.append(this.cloneEl);\n    this.wrapper.style.display = \"none\";\n    ref.document.body.append(this.wrapper);\n    this.wrapper.style.pointerEvents = \"none\"; // this.wrapper.style.overflow = \"hidden\";\n    // this.wrapper.style.textOverflow = \"ellipsis\";\n    // this.wrapper.style.whiteSpace = \"nowrap\";\n    // this.wrapper.style.opacity = \"0.5\";\n    // this.wrapper.style.position = \"fixed\";\n    // this.wrapper.style.Zindex = \"20000\";\n\n    this.wrapper.id = \"ghostEffect\";\n  };\n\n  this.draw = (e, ref) => {\n    this.wrapper.style.display = \"block\";\n    let rect = this.wrapper.getBoundingClientRect();\n    let {\n      marginTop,\n      marginBottom,\n      marginLeft,\n      marginRight,\n      width,\n      height\n    } = computeStyles(this.cloneEl, [\"marginTop\", \"marginBottom\", \"marginLeft\", \"marginRight\", \"width\", \"height\"]);\n    let frameRect;\n    if (ref.frame) frameRect = ref.frame.getBoundingClientRect();else frameRect = {\n      top: 0,\n      left: 0\n    };\n    this.wrapper.style.top = frameRect.top + e.y - elementEvent.offsetY + \"px\";\n    this.wrapper.style.left = frameRect.left + e.x - elementEvent.offsetX + \"px\";\n  };\n\n  this.hide = () => {\n    this.wrapper.remove();\n  };\n}\n\nfunction pDistance(x, y, x1, y1, x2, y2) {\n  var A = x - x1;\n  var B = y - y1;\n  var C = x2 - x1;\n  var D = y2 - y1;\n  var dot = A * C + B * D;\n  var len_sq = C * C + D * D;\n  var param = -1;\n  if (len_sq != 0) //in case of 0 length line\n    param = dot / len_sq;\n  var xx, yy;\n\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  } else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  } else {\n    xx = x1 + param * C;\n    yy = y1 + param * D;\n  }\n\n  var dx = x - xx;\n  var dy = y - yy;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction closestChild(p, children) {\n  let closestDistance = Infinity;\n  let closestchild;\n  let topOrientation;\n\n  for (let child of children) {\n    if (child.classList.contains(\"hidden\")) continue;\n    let [orientation, distance] = distanceToChild(p, child);\n\n    if (distance < closestDistance) {\n      closestDistance = distance;\n      closestchild = child;\n      topOrientation = orientation;\n    }\n  }\n\n  return [topOrientation, closestchild];\n}\n\nlet orientations = [\"left\", \"top\", \"right\", \"bottom\"];\n/**\n *  p [x,y]\n *  child element\n */\n\nfunction distanceToChild(p, child) {\n  let rect = child.getBoundingClientRect();\n  let line1 = {\n    p1: [rect.top, rect.left],\n    p2: [rect.bottom, rect.left]\n  };\n  let line2 = {\n    p1: [rect.top, rect.left],\n    p2: [rect.top, rect.right]\n  };\n  let line3 = {\n    p1: [rect.top, rect.right],\n    p2: [rect.bottom, rect.right]\n  };\n  let line4 = {\n    p1: [rect.bottom, rect.left],\n    p2: [rect.bottom, rect.right]\n  };\n  let distances = [pDistance(p[0], p[1], line1.p1[1], line1.p1[0], line1.p2[1], line1.p2[0]), pDistance(p[0], p[1], line2.p1[1], line2.p1[0], line2.p2[1], line2.p2[0]), pDistance(p[0], p[1], line3.p1[1], line3.p1[0], line3.p2[1], line3.p2[0]), pDistance(p[0], p[1], line4.p1[1], line4.p1[0], line4.p2[1], line4.p2[0])];\n  let orientation;\n  let closestDistance = Infinity;\n  distances.forEach((distance, i) => {\n    if (distance < closestDistance) {\n      closestDistance = distance;\n      orientation = orientations[i];\n    }\n  });\n  return [orientation, closestDistance];\n}\n\nfunction distanceToChildLeftRight(p, child) {\n  let rect = child.getBoundingClientRect();\n  let line1 = {\n    p1: [rect.top, 0],\n    p2: [rect.bottom, 0]\n  };\n  let line3 = {\n    p1: [rect.top, child.clientWidth],\n    p2: [rect.bottom, child.clientWidth]\n  };\n  let distances = [pDistance(p[0], p[1], line1.p1[1], line1.p1[0], line1.p2[1], line1.p2[0]), pDistance(p[0], p[1], line3.p1[1], line3.p1[0], line3.p2[1], line3.p2[0])];\n  let orientation;\n  let closestDistance = Infinity;\n  distances.forEach((distance, i) => {\n    if (distance < closestDistance) {\n      closestDistance = distance;\n      orientation = [\"left\", \"right\"][i];\n    }\n  });\n  return [orientation, closestDistance];\n}\n\nfunction distanceToChildTopBottom(p, child) {\n  let rect = child.getBoundingClientRect();\n  let line2 = {\n    p1: [0, rect.left],\n    p2: [0, rect.right]\n  };\n  let line4 = {\n    p1: [child.clientHeight, rect.left],\n    p2: [child.clientHeight, rect.right]\n  };\n  let distances = [pDistance(p[0], p[1], line2.p1[1], line2.p1[0], line2.p2[1], line2.p2[0]), pDistance(p[0], p[1], line4.p1[1], line4.p1[0], line4.p2[1], line4.p2[0])];\n  let orientation;\n  let closestDistance = Infinity;\n  distances.forEach((distance, i) => {\n    if (distance < closestDistance) {\n      closestDistance = distance;\n      orientation = [\"top\", \"bottom\"][i];\n    }\n  });\n  return [orientation, closestDistance];\n}\n\nfunction autoScroller({\n  speed,\n  threshold\n}) {\n  this.lastScrollingElement;\n  this.onElement;\n  this.mouse;\n  this.speed;\n  this.interval;\n  this.isActive;\n\n  this.update = function (x, y) {\n    this.mouse = {\n      x,\n      y\n    };\n  };\n\n  this.calculateScroll = function ({\n    x,\n    y,\n    element,\n    onMouseScrollMove\n  }) {\n    while (true) {\n      if (element && element.tagName && (element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth)) {\n        break;\n      } else if (element.parentElement) element = element.parentElement;else break;\n    }\n\n    let hasHorizontalScrollbar = element.scrollWidth > element.clientWidth;\n    let hasVerticalScrollbar = element.scrollHeight > element.clientHeight;\n    let horScrollThreshold = element.clientWidth / threshold;\n    let verScrollThreshold = element.clientHeight / threshold;\n    let [orientation, closestDistance] = [];\n    if (hasVerticalScrollbar) [orientation, closestDistance] = distanceToChildTopBottom([x, y], element);else if (hasHorizontalScrollbar) [orientation, closestDistance] = distanceToChildLeftRight([x, y], element);\n\n    if (orientation) {\n      let condition;\n\n      switch (orientation) {\n        case \"top\":\n        case \"bottom\":\n          this.speed = verScrollThreshold / (closestDistance + 1) * speed;\n          condition = closestDistance < verScrollThreshold;\n          break;\n\n        case \"left\":\n        case \"right\":\n          this.speed = horScrollThreshold / (closestDistance + 1) * speed;\n          condition = closestDistance < horScrollThreshold;\n          break;\n      }\n\n      if (condition) {\n        if (!this.isActive) {\n          this.isActive = true;\n\n          this.__activateScroll(element, orientation, onMouseScrollMove);\n        } else if (this.isActive && this.lastScrollingElement !== element) {\n          this.deactivateScroll(element);\n\n          this.__activateScroll(element, orientation, onMouseScrollMove);\n        }\n      } else if (this.isActive) {\n        console.log(\"no\", orientation, element);\n        this.isActive = false;\n        this.deactivateScroll(element);\n      }\n    }\n  }; // this.__scroll = function(element, s1 = 0, s2 = 0)\n  // {\n  //   for(let i = 0 ; i <= this.speed; i++)\n  //   {\n  //     element.scrollBy(s1, s2)\n  //   }\n  // }\n\n\n  this.__activateScroll = function (element, orientation, callback) {\n    // todo: when interval timeout is low and speed is hight scrollBy doesn't act\n    // retodo: give time to scrollBy equal to speed * 0.25 * timeout\n    element.style.scrollBehavior = \"auto\";\n    this.lastScrollingElement = element;\n    this.interval = setInterval(() => {\n      switch (orientation) {\n        case \"top\":\n          element.scrollBy(0, -this.speed);\n          break;\n\n        case \"bottom\":\n          element.scrollBy(0, this.speed);\n          break;\n\n        case \"left\":\n          element.scrollBy(-this.speed, 0);\n          break;\n\n        case \"right\":\n          element.scrollBy(this.speed, 0);\n          break;\n\n        default:\n      } // this.onElement = document.elementFromPoint(this.mouse.x, this.mouse.y);\n      // if (this.onElement) {\n      //   callback({ x: this.mouse.x, y: this.mouse.y, target: this.onElement });\n      // }\n\n    }, 10);\n  };\n\n  this.deactivateScroll = function (element) {\n    if (element) element.style.scrollBehavior = \"\";\n    clearInterval(this.interval);\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../CoCreate-components/CoCreate-dnd/src/util/common.js\n");

/***/ }),

/***/ "../CoCreate-components/CoCreate-dnd/src/util/domContext2.js":
/*!*******************************************************************!*\
  !*** ../CoCreate-components/CoCreate-dnd/src/util/domContext2.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = context;\nexports.initFunctionState = void 0;\n// todo: jest support import/export\nlet initFunctionState = [];\nexports.initFunctionState = initFunctionState;\n\nfunction context(html) {\n  this.map = new Map();\n\n  this.checkInitFunction = function checkInitFunction(element, request) {\n    for (let state of initFunctionState) {\n      if (state.target.contains(element)) {\n        let r = state.onDnd(element, request);\n        if (Array.isArray(r)) return r;\n      }\n    }\n  };\n  /**\n   * @param el the element look for context\n   *\n   * @returns attribute value or false if not found\n   */\n\n\n  this.getContext = function (el, attributeName) {\n    do {\n      if (el.getAnyAttribute(attributeName) == \"true\") return el;else {\n        if (this.checkInitFunction(el, [attributeName])) return el;\n      }\n      el = el.parentElement;\n    } while (el);\n\n    return undefined;\n  };\n  /**\n   * @param el the element look for context\n   */\n\n\n  this.getContexts = function (el, attributeNames) {\n    do {\n      for (let attributeName of attributeNames) {\n        if (el.getAnyAttribute(attributeName) == \"true\") return [el, attributeName];else {\n          let r2 = this.checkInitFunction(el, attributeNames);\n          if (Array.isArray(r2) && attributeNames.includes(r2[1])) return r2;\n        }\n      }\n\n      el = el.parentElement;\n    } while (el);\n\n    return undefined;\n  };\n\n  this.setContext = function (el, att, value) {\n    el.setHiddenAttribute(att, value);\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5kbmQvLi4vQ29DcmVhdGUtY29tcG9uZW50cy9Db0NyZWF0ZS1kbmQvc3JjL3V0aWwvZG9tQ29udGV4dDIuanM/NjE5MCJdLCJuYW1lcyI6WyJpbml0RnVuY3Rpb25TdGF0ZSIsImNvbnRleHQiLCJodG1sIiwibWFwIiwiTWFwIiwiY2hlY2tJbml0RnVuY3Rpb24iLCJlbGVtZW50IiwicmVxdWVzdCIsInN0YXRlIiwidGFyZ2V0IiwiY29udGFpbnMiLCJyIiwib25EbmQiLCJBcnJheSIsImlzQXJyYXkiLCJnZXRDb250ZXh0IiwiZWwiLCJhdHRyaWJ1dGVOYW1lIiwiZ2V0QW55QXR0cmlidXRlIiwicGFyZW50RWxlbWVudCIsInVuZGVmaW5lZCIsImdldENvbnRleHRzIiwiYXR0cmlidXRlTmFtZXMiLCJyMiIsImluY2x1ZGVzIiwic2V0Q29udGV4dCIsImF0dCIsInZhbHVlIiwic2V0SGlkZGVuQXR0cmlidXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFFQSxJQUFJQSxpQkFBaUIsR0FBRyxFQUF4Qjs7O0FBRWUsU0FBU0MsT0FBVCxDQUFpQkMsSUFBakIsRUFBdUI7QUFDcEMsT0FBS0MsR0FBTCxHQUFXLElBQUlDLEdBQUosRUFBWDs7QUFFQSxPQUFLQyxpQkFBTCxHQUF5QixTQUFTQSxpQkFBVCxDQUEyQkMsT0FBM0IsRUFBb0NDLE9BQXBDLEVBQTZDO0FBQ3BFLFNBQUssSUFBSUMsS0FBVCxJQUFrQlIsaUJBQWxCLEVBQXFDO0FBQ25DLFVBQUlRLEtBQUssQ0FBQ0MsTUFBTixDQUFhQyxRQUFiLENBQXNCSixPQUF0QixDQUFKLEVBQW9DO0FBQ2xDLFlBQUlLLENBQUMsR0FBR0gsS0FBSyxDQUFDSSxLQUFOLENBQVlOLE9BQVosRUFBcUJDLE9BQXJCLENBQVI7QUFDQSxZQUFJTSxLQUFLLENBQUNDLE9BQU4sQ0FBY0gsQ0FBZCxDQUFKLEVBQXNCLE9BQU9BLENBQVA7QUFDdkI7QUFDRjtBQUNGLEdBUEQ7QUFRQTtBQUNGO0FBQ0E7QUFDQTtBQUNBOzs7QUFDRSxPQUFLSSxVQUFMLEdBQWtCLFVBQVVDLEVBQVYsRUFBY0MsYUFBZCxFQUE2QjtBQUM3QyxPQUFHO0FBQ0QsVUFBSUQsRUFBRSxDQUFDRSxlQUFILENBQW1CRCxhQUFuQixLQUFxQyxNQUF6QyxFQUFpRCxPQUFPRCxFQUFQLENBQWpELEtBQ0s7QUFDSCxZQUFJLEtBQUtYLGlCQUFMLENBQXVCVyxFQUF2QixFQUEyQixDQUFDQyxhQUFELENBQTNCLENBQUosRUFBaUQsT0FBT0QsRUFBUDtBQUNsRDtBQUNEQSxRQUFFLEdBQUdBLEVBQUUsQ0FBQ0csYUFBUjtBQUNELEtBTkQsUUFNU0gsRUFOVDs7QUFRQSxXQUFPSSxTQUFQO0FBQ0QsR0FWRDtBQVlBO0FBQ0Y7QUFDQTs7O0FBQ0UsT0FBS0MsV0FBTCxHQUFtQixVQUFVTCxFQUFWLEVBQWNNLGNBQWQsRUFBOEI7QUFDL0MsT0FBRztBQUNELFdBQUssSUFBSUwsYUFBVCxJQUEwQkssY0FBMUIsRUFBMEM7QUFDeEMsWUFBSU4sRUFBRSxDQUFDRSxlQUFILENBQW1CRCxhQUFuQixLQUFxQyxNQUF6QyxFQUNFLE9BQU8sQ0FBQ0QsRUFBRCxFQUFLQyxhQUFMLENBQVAsQ0FERixLQUVLO0FBQ0gsY0FBSU0sRUFBRSxHQUFHLEtBQUtsQixpQkFBTCxDQUF1QlcsRUFBdkIsRUFBMkJNLGNBQTNCLENBQVQ7QUFDQSxjQUFJVCxLQUFLLENBQUNDLE9BQU4sQ0FBY1MsRUFBZCxLQUFxQkQsY0FBYyxDQUFDRSxRQUFmLENBQXdCRCxFQUFFLENBQUMsQ0FBRCxDQUExQixDQUF6QixFQUF5RCxPQUFPQSxFQUFQO0FBQzFEO0FBQ0Y7O0FBRURQLFFBQUUsR0FBR0EsRUFBRSxDQUFDRyxhQUFSO0FBQ0QsS0FYRCxRQVdTSCxFQVhUOztBQWFBLFdBQU9JLFNBQVA7QUFDRCxHQWZEOztBQWlCQSxPQUFLSyxVQUFMLEdBQWtCLFVBQVVULEVBQVYsRUFBY1UsR0FBZCxFQUFtQkMsS0FBbkIsRUFBMEI7QUFDMUNYLE1BQUUsQ0FBQ1ksa0JBQUgsQ0FBc0JGLEdBQXRCLEVBQTJCQyxLQUEzQjtBQUNELEdBRkQ7QUFHRCIsImZpbGUiOiIuLi9Db0NyZWF0ZS1jb21wb25lbnRzL0NvQ3JlYXRlLWRuZC9zcmMvdXRpbC9kb21Db250ZXh0Mi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHRvZG86IGplc3Qgc3VwcG9ydCBpbXBvcnQvZXhwb3J0XG5cbmxldCBpbml0RnVuY3Rpb25TdGF0ZSA9IFtdO1xuZXhwb3J0IHsgaW5pdEZ1bmN0aW9uU3RhdGUgfTtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbnRleHQoaHRtbCkge1xuICB0aGlzLm1hcCA9IG5ldyBNYXAoKTtcblxuICB0aGlzLmNoZWNrSW5pdEZ1bmN0aW9uID0gZnVuY3Rpb24gY2hlY2tJbml0RnVuY3Rpb24oZWxlbWVudCwgcmVxdWVzdCkge1xuICAgIGZvciAobGV0IHN0YXRlIG9mIGluaXRGdW5jdGlvblN0YXRlKSB7XG4gICAgICBpZiAoc3RhdGUudGFyZ2V0LmNvbnRhaW5zKGVsZW1lbnQpKSB7XG4gICAgICAgIGxldCByID0gc3RhdGUub25EbmQoZWxlbWVudCwgcmVxdWVzdCk7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHIpKSByZXR1cm4gcjtcbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIC8qKlxuICAgKiBAcGFyYW0gZWwgdGhlIGVsZW1lbnQgbG9vayBmb3IgY29udGV4dFxuICAgKlxuICAgKiBAcmV0dXJucyBhdHRyaWJ1dGUgdmFsdWUgb3IgZmFsc2UgaWYgbm90IGZvdW5kXG4gICAqL1xuICB0aGlzLmdldENvbnRleHQgPSBmdW5jdGlvbiAoZWwsIGF0dHJpYnV0ZU5hbWUpIHtcbiAgICBkbyB7XG4gICAgICBpZiAoZWwuZ2V0QW55QXR0cmlidXRlKGF0dHJpYnV0ZU5hbWUpID09IFwidHJ1ZVwiKSByZXR1cm4gZWw7XG4gICAgICBlbHNlIHtcbiAgICAgICAgaWYgKHRoaXMuY2hlY2tJbml0RnVuY3Rpb24oZWwsIFthdHRyaWJ1dGVOYW1lXSkpIHJldHVybiBlbDtcbiAgICAgIH1cbiAgICAgIGVsID0gZWwucGFyZW50RWxlbWVudDtcbiAgICB9IHdoaWxlIChlbCk7XG5cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9O1xuXG4gIC8qKlxuICAgKiBAcGFyYW0gZWwgdGhlIGVsZW1lbnQgbG9vayBmb3IgY29udGV4dFxuICAgKi9cbiAgdGhpcy5nZXRDb250ZXh0cyA9IGZ1bmN0aW9uIChlbCwgYXR0cmlidXRlTmFtZXMpIHtcbiAgICBkbyB7XG4gICAgICBmb3IgKGxldCBhdHRyaWJ1dGVOYW1lIG9mIGF0dHJpYnV0ZU5hbWVzKSB7XG4gICAgICAgIGlmIChlbC5nZXRBbnlBdHRyaWJ1dGUoYXR0cmlidXRlTmFtZSkgPT0gXCJ0cnVlXCIpXG4gICAgICAgICAgcmV0dXJuIFtlbCwgYXR0cmlidXRlTmFtZV07XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIGxldCByMiA9IHRoaXMuY2hlY2tJbml0RnVuY3Rpb24oZWwsIGF0dHJpYnV0ZU5hbWVzKTtcbiAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShyMikgJiYgYXR0cmlidXRlTmFtZXMuaW5jbHVkZXMocjJbMV0pKSByZXR1cm4gcjI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgZWwgPSBlbC5wYXJlbnRFbGVtZW50O1xuICAgIH0gd2hpbGUgKGVsKTtcblxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH07XG5cbiAgdGhpcy5zZXRDb250ZXh0ID0gZnVuY3Rpb24gKGVsLCBhdHQsIHZhbHVlKSB7XG4gICAgZWwuc2V0SGlkZGVuQXR0cmlidXRlKGF0dCwgdmFsdWUpO1xuICB9O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../CoCreate-components/CoCreate-dnd/src/util/domContext2.js\n");

/***/ }),

/***/ "../CoCreate-components/CoCreate-dnd/src/util/iframe.js":
/*!**************************************************************!*\
  !*** ../CoCreate-components/CoCreate-dnd/src/util/iframe.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// always loaded in host no iframes\nwindow.addEventListener('load', () => {\n  let iframes = {\n    host: {\n      document,\n      window\n    },\n    guests: {}\n  };\n  window.iframes = iframes;\n  let allFrames = document.getElementsByTagName('iframe');\n  let i = 1;\n\n  for (let frame of allFrames) {\n    let id = frame.id || `iframe${i++}`;\n    iframes.guests[id] = {\n      frame,\n      document: frame.contentDocument,\n      window: frame.contentWindow\n    };\n    frame.contentWindow.iframes = iframes;\n  }\n\n  const callback = function (mutationsList, observer) {\n    for (let mutation of mutationsList) {\n      if (mutation.type === 'childList') {\n        for (let added of mutation.addedNodes) {\n          if (added.tagName === 'IFRAME') {\n            let id = added.id || `iframe${i++}`;\n            iframes.guests[id] = {\n              frame: added,\n              document: added.contentDocument,\n              window: added.contentWindow\n            };\n            added.contentWindow.iframes = iframes;\n          }\n        }\n      }\n    }\n  };\n\n  const observer = new MutationObserver(callback);\n  const config = {\n    attributes: true,\n    childList: true,\n    subtree: true\n  };\n  observer.observe(document.body, config);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5kbmQvLi4vQ29DcmVhdGUtY29tcG9uZW50cy9Db0NyZWF0ZS1kbmQvc3JjL3V0aWwvaWZyYW1lLmpzP2EzOGMiXSwibmFtZXMiOlsid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsImlmcmFtZXMiLCJob3N0IiwiZG9jdW1lbnQiLCJndWVzdHMiLCJhbGxGcmFtZXMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImkiLCJmcmFtZSIsImlkIiwiY29udGVudERvY3VtZW50IiwiY29udGVudFdpbmRvdyIsImNhbGxiYWNrIiwibXV0YXRpb25zTGlzdCIsIm9ic2VydmVyIiwibXV0YXRpb24iLCJ0eXBlIiwiYWRkZWQiLCJhZGRlZE5vZGVzIiwidGFnTmFtZSIsIk11dGF0aW9uT2JzZXJ2ZXIiLCJjb25maWciLCJhdHRyaWJ1dGVzIiwiY2hpbGRMaXN0Iiwic3VidHJlZSIsIm9ic2VydmUiLCJib2R5Il0sIm1hcHBpbmdzIjoiOztBQUFBO0FBRUFBLE1BQU0sQ0FBQ0MsZ0JBQVAsQ0FBd0IsTUFBeEIsRUFBZ0MsTUFBTTtBQUdwQyxNQUFJQyxPQUFPLEdBQUc7QUFDWkMsUUFBSSxFQUFFO0FBQ0pDLGNBREk7QUFFSko7QUFGSSxLQURNO0FBS1pLLFVBQU0sRUFBRTtBQUxJLEdBQWQ7QUFPQUwsUUFBTSxDQUFDRSxPQUFQLEdBQWlCQSxPQUFqQjtBQUdBLE1BQUlJLFNBQVMsR0FBR0YsUUFBUSxDQUFDRyxvQkFBVCxDQUE4QixRQUE5QixDQUFoQjtBQUVBLE1BQUlDLENBQUMsR0FBRyxDQUFSOztBQUNBLE9BQUssSUFBSUMsS0FBVCxJQUFrQkgsU0FBbEIsRUFBNkI7QUFDM0IsUUFBSUksRUFBRSxHQUFHRCxLQUFLLENBQUNDLEVBQU4sSUFBYSxTQUFRRixDQUFDLEVBQUcsRUFBbEM7QUFDQU4sV0FBTyxDQUFDRyxNQUFSLENBQWVLLEVBQWYsSUFBc0I7QUFDcEJELFdBRG9CO0FBRXBCTCxjQUFRLEVBQUVLLEtBQUssQ0FBQ0UsZUFGSTtBQUdwQlgsWUFBTSxFQUFFUyxLQUFLLENBQUNHO0FBSE0sS0FBdEI7QUFLQUgsU0FBSyxDQUFDRyxhQUFOLENBQW9CVixPQUFwQixHQUE4QkEsT0FBOUI7QUFDRDs7QUFLRCxRQUFNVyxRQUFRLEdBQUcsVUFBU0MsYUFBVCxFQUF3QkMsUUFBeEIsRUFBa0M7QUFFakQsU0FBSyxJQUFJQyxRQUFULElBQXFCRixhQUFyQixFQUFvQztBQUNsQyxVQUFJRSxRQUFRLENBQUNDLElBQVQsS0FBa0IsV0FBdEIsRUFBbUM7QUFDakMsYUFBSyxJQUFJQyxLQUFULElBQWtCRixRQUFRLENBQUNHLFVBQTNCLEVBQXVDO0FBQ3JDLGNBQUlELEtBQUssQ0FBQ0UsT0FBTixLQUFrQixRQUF0QixFQUFnQztBQUM5QixnQkFBSVYsRUFBRSxHQUFHUSxLQUFLLENBQUNSLEVBQU4sSUFBYSxTQUFRRixDQUFDLEVBQUcsRUFBbEM7QUFDQU4sbUJBQU8sQ0FBQ0csTUFBUixDQUFlSyxFQUFmLElBQXNCO0FBQ3BCRCxtQkFBSyxFQUFFUyxLQURhO0FBRXBCZCxzQkFBUSxFQUFFYyxLQUFLLENBQUNQLGVBRkk7QUFHcEJYLG9CQUFNLEVBQUVrQixLQUFLLENBQUNOO0FBSE0sYUFBdEI7QUFLQU0saUJBQUssQ0FBQ04sYUFBTixDQUFvQlYsT0FBcEIsR0FBOEJBLE9BQTlCO0FBQ0Q7QUFDRjtBQUNGO0FBRUY7QUFDRixHQWxCRDs7QUFvQkEsUUFBTWEsUUFBUSxHQUFHLElBQUlNLGdCQUFKLENBQXFCUixRQUFyQixDQUFqQjtBQUVBLFFBQU1TLE1BQU0sR0FBRztBQUFFQyxjQUFVLEVBQUUsSUFBZDtBQUFvQkMsYUFBUyxFQUFFLElBQS9CO0FBQXFDQyxXQUFPLEVBQUU7QUFBOUMsR0FBZjtBQUVBVixVQUFRLENBQUNXLE9BQVQsQ0FBaUJ0QixRQUFRLENBQUN1QixJQUExQixFQUFnQ0wsTUFBaEM7QUFHRCxDQXhERCIsImZpbGUiOiIuLi9Db0NyZWF0ZS1jb21wb25lbnRzL0NvQ3JlYXRlLWRuZC9zcmMvdXRpbC9pZnJhbWUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBhbHdheXMgbG9hZGVkIGluIGhvc3Qgbm8gaWZyYW1lc1xuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsICgpID0+IHtcblxuXG4gIGxldCBpZnJhbWVzID0ge1xuICAgIGhvc3Q6IHtcbiAgICAgIGRvY3VtZW50LFxuICAgICAgd2luZG93XG4gICAgfSxcbiAgICBndWVzdHM6IHt9XG4gIH07XG4gIHdpbmRvdy5pZnJhbWVzID0gaWZyYW1lc1xuXG5cbiAgbGV0IGFsbEZyYW1lcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdpZnJhbWUnKVxuXG4gIGxldCBpID0gMTtcbiAgZm9yIChsZXQgZnJhbWUgb2YgYWxsRnJhbWVzKSB7XG4gICAgbGV0IGlkID0gZnJhbWUuaWQgfHwgYGlmcmFtZSR7aSsrfWBcbiAgICBpZnJhbWVzLmd1ZXN0c1tpZF0gPSAoe1xuICAgICAgZnJhbWUsXG4gICAgICBkb2N1bWVudDogZnJhbWUuY29udGVudERvY3VtZW50LFxuICAgICAgd2luZG93OiBmcmFtZS5jb250ZW50V2luZG93XG4gICAgfSlcbiAgICBmcmFtZS5jb250ZW50V2luZG93LmlmcmFtZXMgPSBpZnJhbWVzO1xuICB9XG5cblxuXG5cbiAgY29uc3QgY2FsbGJhY2sgPSBmdW5jdGlvbihtdXRhdGlvbnNMaXN0LCBvYnNlcnZlcikge1xuXG4gICAgZm9yIChsZXQgbXV0YXRpb24gb2YgbXV0YXRpb25zTGlzdCkge1xuICAgICAgaWYgKG11dGF0aW9uLnR5cGUgPT09ICdjaGlsZExpc3QnKSB7XG4gICAgICAgIGZvciAobGV0IGFkZGVkIG9mIG11dGF0aW9uLmFkZGVkTm9kZXMpIHtcbiAgICAgICAgICBpZiAoYWRkZWQudGFnTmFtZSA9PT0gJ0lGUkFNRScpIHtcbiAgICAgICAgICAgIGxldCBpZCA9IGFkZGVkLmlkIHx8IGBpZnJhbWUke2krK31gXG4gICAgICAgICAgICBpZnJhbWVzLmd1ZXN0c1tpZF0gPSAoe1xuICAgICAgICAgICAgICBmcmFtZTogYWRkZWQsXG4gICAgICAgICAgICAgIGRvY3VtZW50OiBhZGRlZC5jb250ZW50RG9jdW1lbnQsXG4gICAgICAgICAgICAgIHdpbmRvdzogYWRkZWQuY29udGVudFdpbmRvd1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIGFkZGVkLmNvbnRlbnRXaW5kb3cuaWZyYW1lcyA9IGlmcmFtZXM7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICB9XG4gIH07XG5cbiAgY29uc3Qgb2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcihjYWxsYmFjayk7XG5cbiAgY29uc3QgY29uZmlnID0geyBhdHRyaWJ1dGVzOiB0cnVlLCBjaGlsZExpc3Q6IHRydWUsIHN1YnRyZWU6IHRydWUgfTtcblxuICBvYnNlcnZlci5vYnNlcnZlKGRvY3VtZW50LmJvZHksIGNvbmZpZyk7XG5cblxufSlcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../CoCreate-components/CoCreate-dnd/src/util/iframe.js\n");

/***/ }),

/***/ "../CoCreate-components/CoCreate-dnd/src/util/onClickLeftEvent.js":
/*!************************************************************************!*\
  !*** ../CoCreate-components/CoCreate-dnd/src/util/onClickLeftEvent.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// synthesize custom event \"CoCreateClickLeft\" that only trigger when\n// mousedown and up happen in 500ms witin the same element\nlet lastEl = null;\nlet time = null;\ndocument.addEventListener('mousedown', e => {\n  if (e.which === 1) {\n    lastEl = e.target;\n    time = new Date().getTime();\n  }\n});\ndocument.addEventListener('mouseup', e => {\n  let newTime = new Date().getTime();\n\n  if (lastEl == e.target && newTime < time + 500) {\n    const event = new CustomEvent('CoCreateClickLeft', {\n      bubbles: true\n    });\n    e.target.dispatchEvent(event);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5kbmQvLi4vQ29DcmVhdGUtY29tcG9uZW50cy9Db0NyZWF0ZS1kbmQvc3JjL3V0aWwvb25DbGlja0xlZnRFdmVudC5qcz9jZDdhIl0sIm5hbWVzIjpbImxhc3RFbCIsInRpbWUiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwid2hpY2giLCJ0YXJnZXQiLCJEYXRlIiwiZ2V0VGltZSIsIm5ld1RpbWUiLCJldmVudCIsIkN1c3RvbUV2ZW50IiwiYnViYmxlcyIsImRpc3BhdGNoRXZlbnQiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUVBLElBQUlBLE1BQU0sR0FBRyxJQUFiO0FBQ0EsSUFBSUMsSUFBSSxHQUFHLElBQVg7QUFFQUMsUUFBUSxDQUFDQyxnQkFBVCxDQUEwQixXQUExQixFQUF1Q0MsQ0FBQyxJQUFJO0FBQzFDLE1BQUlBLENBQUMsQ0FBQ0MsS0FBRixLQUFZLENBQWhCLEVBQW1CO0FBQ2pCTCxVQUFNLEdBQUdJLENBQUMsQ0FBQ0UsTUFBWDtBQUNBTCxRQUFJLEdBQUcsSUFBSU0sSUFBSixHQUFXQyxPQUFYLEVBQVA7QUFDRDtBQUNGLENBTEQ7QUFPQU4sUUFBUSxDQUFDQyxnQkFBVCxDQUEwQixTQUExQixFQUFxQ0MsQ0FBQyxJQUFJO0FBQ3hDLE1BQUlLLE9BQU8sR0FBRyxJQUFJRixJQUFKLEdBQVdDLE9BQVgsRUFBZDs7QUFDQSxNQUFJUixNQUFNLElBQUlJLENBQUMsQ0FBQ0UsTUFBWixJQUFzQkcsT0FBTyxHQUFHUixJQUFJLEdBQUcsR0FBM0MsRUFBZ0Q7QUFDOUMsVUFBTVMsS0FBSyxHQUFHLElBQUlDLFdBQUosQ0FBZ0IsbUJBQWhCLEVBQXFDO0FBQ2pEQyxhQUFPLEVBQUU7QUFEd0MsS0FBckMsQ0FBZDtBQUdBUixLQUFDLENBQUNFLE1BQUYsQ0FBU08sYUFBVCxDQUF1QkgsS0FBdkI7QUFDRDtBQUVGLENBVEQiLCJmaWxlIjoiLi4vQ29DcmVhdGUtY29tcG9uZW50cy9Db0NyZWF0ZS1kbmQvc3JjL3V0aWwvb25DbGlja0xlZnRFdmVudC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHN5bnRoZXNpemUgY3VzdG9tIGV2ZW50IFwiQ29DcmVhdGVDbGlja0xlZnRcIiB0aGF0IG9ubHkgdHJpZ2dlciB3aGVuXG4vLyBtb3VzZWRvd24gYW5kIHVwIGhhcHBlbiBpbiA1MDBtcyB3aXRpbiB0aGUgc2FtZSBlbGVtZW50XG5cbmxldCBsYXN0RWwgPSBudWxsO1xubGV0IHRpbWUgPSBudWxsO1xuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBlID0+IHtcbiAgaWYgKGUud2hpY2ggPT09IDEpIHtcbiAgICBsYXN0RWwgPSBlLnRhcmdldDtcbiAgICB0aW1lID0gbmV3IERhdGUoKS5nZXRUaW1lKClcbiAgfVxufSlcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIGUgPT4ge1xuICBsZXQgbmV3VGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuICBpZiAobGFzdEVsID09IGUudGFyZ2V0ICYmIG5ld1RpbWUgPCB0aW1lICsgNTAwKSB7XG4gICAgY29uc3QgZXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQoJ0NvQ3JlYXRlQ2xpY2tMZWZ0Jywge1xuICAgICAgYnViYmxlczogdHJ1ZVxuICAgIH0pO1xuICAgIGUudGFyZ2V0LmRpc3BhdGNoRXZlbnQoZXZlbnQpXG4gIH1cblxufSlcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../CoCreate-components/CoCreate-dnd/src/util/onClickLeftEvent.js\n");

/***/ }),

/***/ "../CoCreate-components/CoCreate-dnd/src/util/variables.js":
/*!*****************************************************************!*\
  !*** ../CoCreate-components/CoCreate-dnd/src/util/variables.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.data_insert_html = exports.group_name = exports.dndname = exports.handleable = exports.hoverable = exports.editable = exports.selectable = exports.cloneable = exports.draggable = exports.exclude = exports.droppable = void 0;\nconst droppable = \"data-droppable\";\nexports.droppable = droppable;\nconst exclude = \"data-exclude\";\nexports.exclude = exclude;\nconst draggable = \"data-draggable\";\nexports.draggable = draggable;\nconst cloneable = \"data-cloneable\";\nexports.cloneable = cloneable;\nconst selectable = \"data-selectable\";\nexports.selectable = selectable;\nconst editable = \"data-editable\";\nexports.editable = editable;\nconst hoverable = \"data-hoverable\";\nexports.hoverable = hoverable;\nconst handleable = \"data-handle\";\nexports.handleable = handleable;\nconst dndname = \"data-name\";\nexports.dndname = dndname;\nconst group_name = \"data-group_name\";\nexports.group_name = group_name;\nconst data_insert_html = \"data-insert-html\";\nexports.data_insert_html = data_insert_html;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZS5kbmQvLi4vQ29DcmVhdGUtY29tcG9uZW50cy9Db0NyZWF0ZS1kbmQvc3JjL3V0aWwvdmFyaWFibGVzLmpzP2MxNjYiXSwibmFtZXMiOlsiZHJvcHBhYmxlIiwiZXhjbHVkZSIsImRyYWdnYWJsZSIsImNsb25lYWJsZSIsInNlbGVjdGFibGUiLCJlZGl0YWJsZSIsImhvdmVyYWJsZSIsImhhbmRsZWFibGUiLCJkbmRuYW1lIiwiZ3JvdXBfbmFtZSIsImRhdGFfaW5zZXJ0X2h0bWwiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLE1BQU1BLFNBQVMsR0FBRyxnQkFBbEI7O0FBQ0EsTUFBTUMsT0FBTyxHQUFHLGNBQWhCOztBQUNBLE1BQU1DLFNBQVMsR0FBRyxnQkFBbEI7O0FBQ0EsTUFBTUMsU0FBUyxHQUFHLGdCQUFsQjs7QUFDQSxNQUFNQyxVQUFVLEdBQUcsaUJBQW5COztBQUNBLE1BQU1DLFFBQVEsR0FBRyxlQUFqQjs7QUFDQSxNQUFNQyxTQUFTLEdBQUcsZ0JBQWxCOztBQUNBLE1BQU1DLFVBQVUsR0FBRyxhQUFuQjs7QUFDQSxNQUFNQyxPQUFPLEdBQUcsV0FBaEI7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHLGlCQUFuQjs7QUFDQSxNQUFNQyxnQkFBZ0IsR0FBRyxrQkFBekIiLCJmaWxlIjoiLi4vQ29DcmVhdGUtY29tcG9uZW50cy9Db0NyZWF0ZS1kbmQvc3JjL3V0aWwvdmFyaWFibGVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGRyb3BwYWJsZSA9IFwiZGF0YS1kcm9wcGFibGVcIjtcbmV4cG9ydCBjb25zdCBleGNsdWRlID0gXCJkYXRhLWV4Y2x1ZGVcIjtcbmV4cG9ydCBjb25zdCBkcmFnZ2FibGUgPSBcImRhdGEtZHJhZ2dhYmxlXCI7XG5leHBvcnQgY29uc3QgY2xvbmVhYmxlID0gXCJkYXRhLWNsb25lYWJsZVwiO1xuZXhwb3J0IGNvbnN0IHNlbGVjdGFibGUgPSBcImRhdGEtc2VsZWN0YWJsZVwiO1xuZXhwb3J0IGNvbnN0IGVkaXRhYmxlID0gXCJkYXRhLWVkaXRhYmxlXCI7XG5leHBvcnQgY29uc3QgaG92ZXJhYmxlID0gXCJkYXRhLWhvdmVyYWJsZVwiO1xuZXhwb3J0IGNvbnN0IGhhbmRsZWFibGUgPSBcImRhdGEtaGFuZGxlXCI7XG5leHBvcnQgY29uc3QgZG5kbmFtZSA9IFwiZGF0YS1uYW1lXCI7XG5leHBvcnQgY29uc3QgZ3JvdXBfbmFtZSA9IFwiZGF0YS1ncm91cF9uYW1lXCI7XG5leHBvcnQgY29uc3QgZGF0YV9pbnNlcnRfaHRtbCA9IFwiZGF0YS1pbnNlcnQtaHRtbFwiO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../CoCreate-components/CoCreate-dnd/src/util/variables.js\n");

/***/ }),

/***/ "../CoCreate-components/CoCreate-dnd/src/virtualDnd.js":
/*!*************************************************************!*\
  !*** ../CoCreate-components/CoCreate-dnd/src/virtualDnd.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = virtualDnd;\n\nvar _eventUtil = _interopRequireDefault(__webpack_require__(/*! ./eventUtil */ \"../CoCreate-components/CoCreate-dnd/src/eventUtil.js\"));\n\nvar _common = __webpack_require__(/*! ./util/common */ \"../CoCreate-components/CoCreate-dnd/src/util/common.js\");\n\nvar _variables = __webpack_require__(/*! ./util/variables */ \"../CoCreate-components/CoCreate-dnd/src/util/variables.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction UUID(length = 10) {\n  var result = \"\";\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n  var charactersLength = characters.length;\n\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  var d = new Date().toTimeString();\n  var random = d.replace(/[\\W_]+/g, \"\").substr(0, 6);\n  result += random;\n  return result;\n}\n\nlet topleft = [\"left\", \"top\"];\n\nfunction virtualDnd(beforeDndSuccess) {\n  this.dragedEl;\n  this.dropedEl;\n  this.position;\n  this.id;\n  this.type;\n  let evnt = new _eventUtil.default();\n\n  this.on = function () {\n    evnt.on.apply(evnt, arguments);\n  };\n\n  this.dragStart = (e, el, id, ref, dropType) => {\n    // #broadcast\n    // domEditor({\n    //   obj: selectorUtil.cssPath( this.dropedEl),\n    //   method: 'insertAdjacentElement',\n    //   value: { param1: [this.position, selectorUtil.cssPath(this.dragedEl)] }\n    // });\n    this.id = id;\n    this.dropType = dropType;\n    console.log({\n      comment: \"dragStart\"\n    }); // dfonclk.onActive(e.target)\n    // selectBoxMarker.hide(onRemove)\n    // greenDropMarker.hide();\n\n    this.dragedEl = el;\n    evnt.dispatch(\"dragStart\", {\n      e,\n      el,\n      ref\n    });\n  };\n\n  this.dragEnd = (e, ref) => {\n    try {\n      if (this.dragedEl) this.dragedEl.removeAttribute(\"CoC-dragging\");\n\n      if (this.position) {\n        if (this.dropedEl === this.dragedEl) throw \"dnd cancelled. you can't dnd on the same element.\"; // in future we should also disable hover and tag name in dragOver method\n        // parent can't be draged into children\n\n        if (this.dragedEl.contains(this.dropedEl)) throw \"dnd cancelled, you can't dnd from parent to its children.\";\n        let path = CoCreate.utils.getElementPath(this.dropedEl); // get iframe path\n        // let path = [];\n        //   const {cssPath, findIframeFromElement, getTopMostWindow} = window.cc;\n        //   let topWindow = getTopMostWindow()\n        //   let iframeElement = findIframeFromElement(topWindow, this.dropedEl)\n        //   let p = cssPath(iframeElement);\n        //   if(p)\n        //   path.unshift(p)\n        //todo: support for nested iframe\n        // while(iframeElement !== findIframeFromElement(topWindow,iframeElement))\n        // {\n        //   iframeElement = findIframeFromElement(topWindow,iframeElement);\n        //   path.unshift(cssPath(iframeElement))\n        // }\n\n        let detail = {\n          position: this.position,\n          dragedEl: this.dragedEl,\n          dropedEl: this.dropedEl,\n          dropType: this.dropType,\n          path\n        };\n        let result;\n        if (beforeDndSuccess) result = beforeDndSuccess(detail);\n        Object.assign(detail, result); // dispatch gloval events\n\n        const event = new CustomEvent(\"dndsuccess\", {\n          bubbles: false,\n          detail\n        });\n        let broadcast = {\n          target: detail.dropedEl,\n          method: \"insertAdjacentElement\",\n          value: [detail.position, detail.dragedEl]\n        };\n        this.dropedEl.insertAdjacentElement(this.position, this.dragedEl); // domEditor(broadcast);\n\n        window.dispatchEvent(event, {\n          bubbles: false\n        });\n      }\n    } catch (e) {\n      console.error(e);\n    } finally {\n      if (this.type) {\n        this.position = null;\n        console.log(\"dnd completed\", \"type:\", this.type, \"position:\", this.position);\n      }\n\n      evnt.dispatch(\"dragEnd\", {\n        e,\n        ref\n      });\n    }\n  };\n\n  this.dragOver = (e, el, ref) => {\n    // el is the element hovered\n    if (this.dragedEl) this.dragedEl.setAttribute(\"CoC-dragging\", true);\n\n    if (el.children.length === 0) {\n      // place top or bottom inside the element\n      let [orientation, closestEl] = (0, _common.closestChild)([e.x, e.y], [el]);\n      evnt.dispatch(\"dragOver\", {\n        e,\n        el,\n        closestEl,\n        orientation,\n        hasChild: true,\n        ref\n      }); // greenDropMarker.draw(el, el, orientation, true);\n      // hoverBoxMarker.draw(el)\n      // tagNameTooltip.draw(el)\n\n      this.position = topleft.includes(orientation) ? \"afterbegin\" : \"beforeend\";\n      this.dropedEl = el;\n      this.type = \"normal\";\n    } else {\n      // find closest child and put outside the child element on top or bottom relating to that child,\n      let [orientation, closestEl] = (0, _common.closestChild)([e.x, e.y], el.children); // greenDropMarker.draw(el, closestEl, orientation, false);\n      // hoverBoxMarker.draw(el)\n      // tagNameTooltip.draw(el)\n\n      if (closestEl.getAttribute(\"data-exclude\") == \"true\") {\n        this.dropedEl = closestEl.parentElement; // only to get orientation\n\n        let [orientation2, closestEl2] = (0, _common.closestChild)([e.x, e.y], [this.dropedEl]);\n        orientation = orientation2;\n      } else this.dropedEl = closestEl;\n\n      evnt.dispatch(\"dragOver\", {\n        e,\n        el,\n        closestEl,\n        orientation,\n        hasChild: false,\n        ref\n      });\n      this.position = topleft.includes(orientation) ? \"beforebegin\" : \"afterend\";\n      this.type = \"children\";\n    }\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../CoCreate-components/CoCreate-dnd/src/virtualDnd.js\n");

/***/ })

/******/ })["default"];
});